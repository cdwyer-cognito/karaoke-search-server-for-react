{"version":3,"sources":["store/actionTypes/api.js","components/AppListeners/AppListeners.jsx","components/AppListeners/AppListenersConnector.jsx","containers/Home/Home.js","containers/Home/HomeConnector.js","components/ToolbarButton/ToolbarButton.jsx","components/ToolbarButton/ToolbarButtonConnector.jsx","components/Toolbar/Toolbar.jsx","components/Toolbar/ToolbarConnector.js","components/LogonDialog/LogonDialog.jsx","components/LogonDialog/sha256.js","components/LogonDialog/LogonDialogConnector.js","components/ReportSongIssue/ReportSongIssue.jsx","components/ReportSongIssue/ReportSongIssueConnector.js","components/SelectedSongDialog/SelectedSongDialog.jsx","components/SelectedSongDialog/SelectedSongDialogConnector.js","components/Notification/Notification.jsx","components/Notification/NotificationConnector.js","components/Ticker/Ticker.jsx","components/Ticker/TickerConnector.js","containers/Layout/Layout.jsx","containers/Search/Search.jsx","containers/Search/SearchConnector.js","containers/BrowseBy/BrowseBy.jsx","containers/BrowseBy/BrowseByConnector.js","containers/Results/Results.jsx","containers/Results/ResultsConnector.js","containers/Success/Success.js","containers/Success/SuccessConnector.js","App.jsx","AppConnector.js","store/reducers/admin.js","store/reducers/api.js","store/reducers/displayProperties.js","store/reducers/results.js","store/reducers/toolbar.js","store/reducers/browseCache.js","store/reducers/index.js","store/sagas/apiPollForRequests.js","store/sagas/apiPollForSubmittedRequests.js","store/sagas/selectors.js","store/sagas/apiGetRequests.js","store/sagas/apiAuthentication.js","store/sagas/apiSubmitRequest.js","store/sagas/apiSearchForSongs.js","store/sagas/apiGetSubmittedRequests.js","store/sagas/apiCompleteRequest.js","store/sagas/apiClearRequests.js","store/sagas/apiReloadDatabase.js","store/sagas/apiSubmitSongIssue.js","store/sagas/index.js","store/index.js","index.jsx","store/actionTypes/admin.js","store/actionTypes/results.js","assets/images/logo-karaoke-png.png","store/actionTypes/displayProperties.js","store/actionTypes/toolbar.js","store/actions/admin.js","store/actions/api.js","store/actions/browseCache.js","store/actions/displayProperties.js","store/actions/results.js","store/actions/toolbar.js","store/actions/index.js","store/actionTypes/browseCache.js","constants/routes.js","constants/toolbar.js","constants/index.js","constants/search.js","components/KaraokeSongSummaryListItem/KaraokeSongSummaryListItem.jsx","components/KaraokeSongSummaryListItem/KaraokeSongSummaryListItemConnector.js","assets/images/singers.png"],"names":["START_POLL_FOR_REQUESTS","STOP_POLL_FOR_REQUESTS","SET_POLL_FOR_REQUEST_STATUS","GET_REQUESTS","START_POLL_FOR_TICKER","STOP_POLL_FOR_TICKER","GET_SUBMITTED_REQUESTS","SUBMIT_REQUEST","SET_SENDING_REQUEST","SEARCH_FOR_SONGS","SET_GETTING_SEARCH_RESULTS","COMPLETE_REQUEST","CLEAR_REQUESTS","RELOAD_DATABASE","SUBMIT_SONG_ISSUE","AppListeners","props","setWindowHeightWidth","setBaseUrl","startPollForTicker","stopPollForTicker","handleWindowResize","window","innerHeight","innerWidth","React","useEffect","addEventListener","url","location","href","match","removeEventListener","connect","dispatch","height","width","setIsLandscape","useStyles","makeStyles","theme","home","textAlign","color","textDecoration","left","top","centerContent","display","justifyContent","flexWrap","marginBottom","spacing","img","maxWidth","withRouter","history","setSelectedButton","classes","role","className","onClick","SEARCH","push","src","logo","alt","singers","string","Home","button","borderRadius","borderStyle","borderWidth","borderColor","paddingBottom","selectedButton","borderBottomColor","selected","label","path","buttonClasses","Button","size","join","state","ownProps","toolbar","buttonType","BUTTON_LABEL_INDEX","ToolbarButton","appBar","TOOLBAR_HEIGHT","flexDirection","alignItems","toolbarContent","flexGrow","iconButton","Toolbar","toolbarOptions","djModeActive","handleLogonClick","AppBar","position","map","obj","key","IconButton","LockOpen","Lock","admin","showLogonDialog","textField","marginLeft","marginRight","LogonDialog","logonDialogOpen","handleClose","handleSubmit","useState","password","setPassword","handleKeypress","e","value","target","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","FormControl","TextField","onChange","type","autoComplete","margin","autoFocus","onKeyPress","DialogActions","disabled","length","sha256","s","safe_add","x","y","lsw","S","X","n","R","Ch","z","Maj","Sigma0256","Sigma1256","Gamma0256","binarray","hex_tab","str","i","charAt","binb2hex","m","l","a","b","c","d","f","g","h","T1","T2","K","HASH","W","Array","j","core_sha256","bin","charCodeAt","str2binb","replace","utftext","String","fromCharCode","Utf8Encode","handleLogoffRequest","handleLogonRequest","ReportSongIssue","submitSongIssue","anchorEl","Menu","keepMounted","Boolean","MenuItem","issue","dialogContainer","overflowY","heading","selectedSong","sendingRequest","completeRequest","submitRequest","Title","Artist","DiscRef","Key","Length","CompletedDateTime","DateTime","Singer","name","setName","setAnchorEl","dialogTitle","actionButton","CircularProgress","toLocaleString","currentTarget","fullWidth","Typography","variant","root","Grid","container","item","xs","results","api","clearSelectedSong","singer","onSuccessAction","SelectedSongDialog","Notification","notificationOpen","notificationMessage","closeNotification","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","TransitionComponent","Slide","direction","ContentProps","message","setNotificationOpen","Ticker","tickerString","style","animationDuration","Math","ceil","bottom","padding","backgroundColor","zIndex","class","right","minHeight","minWidth","background","palette","paper","text","primary","marginTop","Layout","children","Container","search","buttonGroup","swipeLeftPath","swipeRightPath","searchString","setSearchString","BOTH","searchBy","setSearchBy","handlers","useSwipeable","onSwipedLeft","onSwipedRight","preventDefaultTouchmoveEvent","trackMouse","RESULTS_PATH","InputProps","startAdornment","InputAdornment","endAdornment","ToggleButtonGroup","exclusive","event","handleSearchByOnChange","ToggleButton","TITLE","ARTIST","BROWSE_BY_ARTIST_PATH","REQUESTS_PATH","BROWSE_BY_TITLE_PATH","searchForSongs","Search","alphabet","browseBy","maxHeight","grid","gridRow","gridSquare","gridRectangle","textTransform","handleButtonClick","buttonStyle","fontSize","displayProperties","SEARCH_PATH","BROWSE_BY_TITLE","ADMIN_PATH","BrowseBy","headerContainer","paddingTop","titleContainer","hint","filterContainer","resultsList","holding","list","spinner","searchResults","gettingSearchResults","clearSearchResults","filter","setFilter","filterBy","setFilterBy","filteredResults","setFilteredResults","userInput","toLowerCase","matchArtist","includes","matchTitle","filterResults","redirect","setTimeout","clearTimeout","pageContent","disableFilter","Error","List","UID","songObj","gutterBottom","FilterList","handleFilterByOnChange","Results","success","box","boldBox","highlightColor","countdown","successfulRequestDetails","completed","setCompleted","timer","setInterval","oldCompleted","min","clearInterval","paragraph","component","Box","fontWeight","align","LinearProgress","Success","Requests","lazy","Admin","App","setToolbarOptions","createMuiTheme","overrides","MuiAppBar","colorPrimary","MuiCircularProgress","routes","exact","render","BROWSE_BY_ARTIST","SUCCESS_PATH","unshift","REQUESTS","ADMIN","ThemeProvider","CssBaseline","fallback","array","initialState","baseUrl","token","action","bool","setDjModeActive","setNotificationMessage","setToken","reducer","actionTypes","pollStatus","setSendingRequest","setPollForRequestStatus","isLandscape","songRequests","completedSongRequests","setSearchResults","setSelectedSong","setSongRequests","setCompletedSongRequests","setTickerString","setSuccessfulRequestDetails","showLogonButton","artist","title","addToBrowseCache","newArtist","addToArtistCache","newTitle","addToTitleCache","combineReducers","browseCache","pollForRequests","watcherSaga","put","getRequests","delay","take","race","call","pollForSubmittedRequests","getSubmittedRequests","getBaseUrl","getToken","getArtistBrowseCache","getTitleBrowseCache","getSongRequests","getCompletedSongRequests","getSelectedSong","sortArrayByDateTime","sort","sortArrayByCompletedDateTime","select","axios","get","response","data","pending","request","State","Position","Date","toLocaleTimeString","takeLatest","requestLogon","requestLogoff","credentials","post","task","headers","HANDLE_LOGON_REQUEST","HANDLE_LOGOFF_REQUEST","body","RequestID","uuidv1","processSearchResults","sortKey1","sortKey2","browse","cache","loadedFromCache","setGettingSearchResults","cachedResults","query","encodeURI","sortedResults","createString","temporaryValue","randomIndex","strings","currentIndex","floor","random","console","log","completedRequests","toISOString","clearRequests","reloadDatabase","songData","rootSaga","spawn","apiPollForRequestsSaga","apiPollForSubmittedRequestsSaga","apiGetRequestsSaga","apiAuthenticationSaga","apiSubmitRequestSaga","apiSearchForSongsSaga","apiGetSubmittedRequests","apiCompleteRequestSaga","apiClearRequestsSaga","apiReloadDatabaseSaga","apiSubmitSongIssueSaga","sagaMiddleware","createSagaMiddleware","middlewareCollection","thunk","enhancerCollection","applyMiddleware","devTools","__REDUX_DEVTOOLS_EXTENSION__","process","ENV","store","createStore","rootReducer","compose","run","ReactDOM","document","getElementById","SHOW_LOGON_DIALOG","SET_DJ_MODE_ACTIVE","SET_BASE_URL","SET_NOTIFICATION_OPEN","SET_NOTIFICATION_MESSAGE","SET_TOKEN","CLEAR_SEARCH_RESULTS","SET_SEARCH_RESULTS","CLEAR_SELECTED_SONG","SET_SELECTED_SONG","SET_SONG_REQUESTS","SET_COMPLETED_SONG_REQUESTS","SET_TICKER_STRING","SET_SUCCESSFUL_REQUEST_DETAILS","module","exports","SET_WINDOW_HEIGHT_WIDTH","SET_IS_LANDSCAPE","SET_SELECTED_BUTTON","SET_TOOLBAR_OPTIONS","startPollForRequests","stopPollForRequests","ADD_TO_BROWSE_CACHE","listItem","boxShadow","requestContainer","dataContainer","dateTime","songSummaryContainer","row","halfRowContainer","keyFormatting","buttonContainer","KaraokeSongSummaryListItem","ListItem","noWrap","stopPropagation","CheckCircleOutline"],"mappings":"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","file":"static/js/main.3c51df5f.chunk.js","sourcesContent":["export const MARK_REQUEST_COMPLETED = \"MARK_REQUEST_COMPLETED\";\r\nexport const START_POLL_FOR_REQUESTS = \"START_POLL_FOR_REQUESTS\";\r\nexport const STOP_POLL_FOR_REQUESTS = \"STOP_POLL_FOR_REQUESTS\";\r\nexport const SET_POLL_FOR_REQUEST_STATUS = 'SET_POLL_FOR_REQUEST_STATUS';\r\nexport const GET_REQUESTS = \"GET_REQUESTS\";\r\nexport const START_POLL_FOR_TICKER = \"START_POLL_FOR_TICKER\";\r\nexport const STOP_POLL_FOR_TICKER = \"STOP_POLL_FOR_TICKER\";\r\nexport const GET_SUBMITTED_REQUESTS = \"GET_SUBMITTED_REQUESTS\";\r\nexport const SUBMIT_REQUEST = \"SUBMIT_REQUEST\";\r\nexport const SET_SENDING_REQUEST = \"SET_SENDING_REQUEST\";\r\nexport const SEARCH_FOR_SONGS = \"SEARCH_FOR_SONGS\";\r\nexport const SET_GETTING_SEARCH_RESULTS = \"SET_GETTING_SEARCH_RESULTS\";\r\nexport const COMPLETE_REQUEST = 'COMPLETE_REQUEST';\r\nexport const CLEAR_REQUESTS = 'CLEAR_REQUESTS';\r\nexport const RELOAD_DATABASE = 'RELOAD_DATABASE';\r\nexport const SUBMIT_SONG_ISSUE = 'SUBMIT_SONG_ISSUE';\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\n\r\nconst AppListeners = props => {\r\n  const {\r\n    setWindowHeightWidth,\r\n    setBaseUrl,\r\n    startPollForTicker,\r\n    stopPollForTicker\r\n  } = props;\r\n\r\n  const handleWindowResize = () => {\r\n    const { innerHeight, innerWidth } = window;\r\n    setWindowHeightWidth(innerHeight, innerWidth);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n\r\n    let url = window.location.href.match(/^http:\\/\\/(.*):/g); // http://{{ some ip address/ dns name / localhost }}:\r\n    const port = 8000;\r\n\r\n    setBaseUrl(url + port + \"/api\");\r\n    startPollForTicker();\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleWindowResize);\r\n      stopPollForTicker();\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport default AppListeners;\r\n","import { connect } from \"react-redux\";\r\nimport AppListeners from \"./AppListeners\";\r\nimport {\r\n  setWindowHeightWidth,\r\n  setIsLandscape,\r\n  setBaseUrl,\r\n  startPollForTicker,\r\n  stopPollForTicker\r\n} from \"../../store/actions/index\";\r\n\r\nexport const mapDispatchToProps = dispatch => ({\r\n  setWindowHeightWidth: (height, width) => {\r\n    dispatch(setWindowHeightWidth(height, width));\r\n    dispatch(setIsLandscape(height >= width));\r\n  },\r\n  setBaseUrl: url => dispatch(setBaseUrl(url)),\r\n  startPollForTicker: () => dispatch(startPollForTicker()),\r\n  stopPollForTicker: () => dispatch(stopPollForTicker())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(AppListeners);\r\n","import React from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport singers from '../../assets/images/singers.png';\r\nimport { SEARCH } from '../../constants/index'\r\n\r\nimport logo from \"../../assets/images/logo-karaoke-png.png\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    home: {\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        textDecoration: 'none',\r\n        width: '100%',\r\n        height: '100%',\r\n        left: 0,\r\n        top: 0,\r\n    },\r\n    centerContent: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexWrap: \"wrap\",\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    img: {\r\n        maxWidth: '100%',\r\n        height: 'auto',\r\n        width: 'auto',\r\n    }\r\n}));\r\n\r\nconst Home = props => {\r\n    const { history, setSelectedButton } = props;\r\n    const classes = useStyles();\r\n\r\n    const handleClick = () => {\r\n        setSelectedButton(SEARCH);\r\n        history.push('/search');\r\n    }\r\n\r\n    return (\r\n        <div role=\"presentation\" className={classes.home} onClick={handleClick}>\r\n            <div className={classes.centerContent}>\r\n                <img src={logo} alt=\"logo\" className={classes.img} />\r\n            </div>\r\n            <h1>Digital Song Book</h1>\r\n            <h3>Tap to start</h3>\r\n            <div>\r\n                <img className={classes.img} src={singers} alt=\"karaoke book\" />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default withRouter(Home);","import { connect } from 'react-redux';\r\nimport Home from './Home';\r\nimport { setSelectedButton } from '../../store/actions/index'\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setSelectedButton: string => dispatch(setSelectedButton(string))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Home);","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    borderRadius: 0,\r\n    borderStyle: 'hidden hidden solid hidden',\r\n    borderWidth: 'thick',\r\n    borderColor: 'transparent',\r\n    paddingBottom: 0,\r\n  },\r\n  selectedButton: {\r\n    borderBottomColor: '#40A4C8',\r\n  }\r\n}));\r\n\r\nconst ToolbarButton = props => {\r\n  const { selected, label, history, path } = props;\r\n  const classes = useStyles();\r\n\r\n\r\n  const buttonClasses = [classes.button];\r\n  if (selected) {\r\n    buttonClasses.push(classes.selectedButton)\r\n  }\r\n\r\n  return (\r\n    <Button size=\"large\" className={buttonClasses.join(' ')} onClick={() => history.push(path)} >\r\n      {label}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default withRouter(ToolbarButton);","import { connect } from 'react-redux';\r\nimport ToolbarButton from './ToolbarButton';\r\nimport { BUTTON_LABEL_INDEX } from '../../constants/index';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { toolbar } = state;\r\n  const { selectedButton } = toolbar;\r\n  const { buttonType } = ownProps;\r\n\r\n  return {\r\n    label: BUTTON_LABEL_INDEX[buttonType],\r\n    selected: selectedButton === buttonType,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolbarButton);","import React from \"react\";\r\nimport { makeStyles, AppBar, IconButton } from \"@material-ui/core\";\r\nimport { Lock, LockOpen } from \"@material-ui/icons\";\r\nimport { TOOLBAR_HEIGHT } from \"../../constants/index\";\r\nimport ToolbarButton from \"../ToolbarButton/ToolbarButtonConnector\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    height: TOOLBAR_HEIGHT,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\"\r\n  },\r\n  toolbarContent: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexGrow: 1\r\n  },\r\n  iconButton: {\r\n    height: 48,\r\n    width: 48\r\n  }\r\n}));\r\n\r\nconst Toolbar = props => {\r\n  const { toolbarOptions, djModeActive, handleLogonClick } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar className={classes.appBar} position=\"fixed\">\r\n      <div className={classes.iconButton} />\r\n      <div className={classes.toolbarContent}>\r\n        {toolbarOptions.map(obj => (\r\n          <ToolbarButton key={obj.buttonType} {...obj} />\r\n        ))}\r\n      </div>\r\n      <IconButton className={classes.iconButton} onClick={handleLogonClick}>\r\n        {djModeActive ? <LockOpen /> : <Lock />}\r\n      </IconButton>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import { connect } from 'react-redux';\r\nimport Toolbar from './Toolbar';\r\nimport { showLogonDialog } from '../../store/actions/index';\r\n\r\nconst mapStateToProps = state => {\r\n  const { admin, toolbar } = state;\r\n  const { djModeActive } = admin;\r\n  const { toolbarOptions } = toolbar;\r\n\r\n  return {\r\n    toolbarOptions,\r\n    djModeActive,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleLogonClick: () => dispatch(showLogonDialog(true))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  makeStyles,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  }\r\n}));\r\n\r\nconst LogonDialog = props => {\r\n  const { logonDialogOpen, handleClose, djModeActive, handleSubmit } = props;\r\n  const classes = useStyles();\r\n\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    setPassword('');\r\n  }, [logonDialogOpen])\r\n\r\n  const handleKeypress = e => {\r\n    const { key, target } = e;\r\n    const { value } = target;\r\n    if (key === 'Enter') {\r\n      handleSubmit(djModeActive, password);\r\n    }\r\n    setPassword(value)\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={logonDialogOpen}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{`${\r\n        djModeActive ? \"Log out from\" : \" Login to\"\r\n        } DJ mode`}</DialogTitle>\r\n      <DialogContent>\r\n        {!djModeActive ? (\r\n          <FormControl>\r\n            <TextField\r\n              value={password}\r\n              onChange={handleKeypress}\r\n              id=\"standard-password-input\"\r\n              label=\"Password\"\r\n              className={classes.textField}\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              margin=\"normal\"\r\n              autoFocus\r\n              onKeyPress={handleKeypress}\r\n            />\r\n          </FormControl>\r\n        ) : null}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => handleSubmit(djModeActive, password)}\r\n          disabled={!djModeActive && password.length === 0}\r\n        >\r\n          {djModeActive ? \"Log out\" : \"Login\"}\r\n        </Button>\r\n        <Button onClick={handleClose}>Close</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogonDialog;\r\n","const sha256 = s => {\r\n  let chrsz = 8;\r\n  let hexcase = 0;\r\n\r\n  const safe_add = (x, y) => {\r\n    let lsw = (x & 0xffff) + (y & 0xffff);\r\n    let msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n    return (msw << 16) | (lsw & 0xffff);\r\n  };\r\n\r\n  const S = (X, n) => {\r\n    return (X >>> n) | (X << (32 - n));\r\n  };\r\n  const R = (X, n) => {\r\n    return X >>> n;\r\n  };\r\n  const Ch = (x, y, z) => {\r\n    return (x & y) ^ (~x & z);\r\n  };\r\n  const Maj = (x, y, z) => {\r\n    return (x & y) ^ (x & z) ^ (y & z);\r\n  };\r\n  const Sigma0256 = x => {\r\n    return S(x, 2) ^ S(x, 13) ^ S(x, 22);\r\n  };\r\n  const Sigma1256 = x => {\r\n    return S(x, 6) ^ S(x, 11) ^ S(x, 25);\r\n  };\r\n  const Gamma0256 = x => {\r\n    return S(x, 7) ^ S(x, 18) ^ R(x, 3);\r\n  };\r\n  const Gamma1256 = x => {\r\n    return S(x, 17) ^ S(x, 19) ^ R(x, 10);\r\n  };\r\n  const core_sha256 = (m, l) => {\r\n    let K = [\r\n      0x428a2f98,\r\n      0x71374491,\r\n      0xb5c0fbcf,\r\n      0xe9b5dba5,\r\n      0x3956c25b,\r\n      0x59f111f1,\r\n      0x923f82a4,\r\n      0xab1c5ed5,\r\n      0xd807aa98,\r\n      0x12835b01,\r\n      0x243185be,\r\n      0x550c7dc3,\r\n      0x72be5d74,\r\n      0x80deb1fe,\r\n      0x9bdc06a7,\r\n      0xc19bf174,\r\n      0xe49b69c1,\r\n      0xefbe4786,\r\n      0xfc19dc6,\r\n      0x240ca1cc,\r\n      0x2de92c6f,\r\n      0x4a7484aa,\r\n      0x5cb0a9dc,\r\n      0x76f988da,\r\n      0x983e5152,\r\n      0xa831c66d,\r\n      0xb00327c8,\r\n      0xbf597fc7,\r\n      0xc6e00bf3,\r\n      0xd5a79147,\r\n      0x6ca6351,\r\n      0x14292967,\r\n      0x27b70a85,\r\n      0x2e1b2138,\r\n      0x4d2c6dfc,\r\n      0x53380d13,\r\n      0x650a7354,\r\n      0x766a0abb,\r\n      0x81c2c92e,\r\n      0x92722c85,\r\n      0xa2bfe8a1,\r\n      0xa81a664b,\r\n      0xc24b8b70,\r\n      0xc76c51a3,\r\n      0xd192e819,\r\n      0xd6990624,\r\n      0xf40e3585,\r\n      0x106aa070,\r\n      0x19a4c116,\r\n      0x1e376c08,\r\n      0x2748774c,\r\n      0x34b0bcb5,\r\n      0x391c0cb3,\r\n      0x4ed8aa4a,\r\n      0x5b9cca4f,\r\n      0x682e6ff3,\r\n      0x748f82ee,\r\n      0x78a5636f,\r\n      0x84c87814,\r\n      0x8cc70208,\r\n      0x90befffa,\r\n      0xa4506ceb,\r\n      0xbef9a3f7,\r\n      0xc67178f2\r\n    ];\r\n\r\n    let HASH = [\r\n      0x6a09e667,\r\n      0xbb67ae85,\r\n      0x3c6ef372,\r\n      0xa54ff53a,\r\n      0x510e527f,\r\n      0x9b05688c,\r\n      0x1f83d9ab,\r\n      0x5be0cd19\r\n    ];\r\n    let W = new Array(64);\r\n    let a, b, c, d, e, f, g, h;\r\n    let T1, T2;\r\n    m[l >> 5] |= 0x80 << (24 - (l % 32));\r\n    m[(((l + 64) >> 9) << 4) + 15] = l;\r\n    for (let i = 0; i < m.length; i += 16) {\r\n      a = HASH[0];\r\n      b = HASH[1];\r\n      c = HASH[2];\r\n      d = HASH[3];\r\n      e = HASH[4];\r\n      f = HASH[5];\r\n      g = HASH[6];\r\n      h = HASH[7];\r\n      for (let j = 0; j < 64; j++) {\r\n        if (j < 16) W[j] = m[j + i];\r\n        else\r\n          W[j] = safe_add(\r\n            safe_add(\r\n              safe_add(Gamma1256(W[j - 2]), W[j - 7]),\r\n              Gamma0256(W[j - 15])\r\n            ),\r\n            W[j - 16]\r\n          );\r\n        T1 = safe_add(\r\n          safe_add(safe_add(safe_add(h, Sigma1256(e)), Ch(e, f, g)), K[j]),\r\n          W[j]\r\n        );\r\n        T2 = safe_add(Sigma0256(a), Maj(a, b, c));\r\n        h = g;\r\n        g = f;\r\n        f = e;\r\n        e = safe_add(d, T1);\r\n        d = c;\r\n        c = b;\r\n        b = a;\r\n        a = safe_add(T1, T2);\r\n      }\r\n      HASH[0] = safe_add(a, HASH[0]);\r\n      HASH[1] = safe_add(b, HASH[1]);\r\n      HASH[2] = safe_add(c, HASH[2]);\r\n      HASH[3] = safe_add(d, HASH[3]);\r\n      HASH[4] = safe_add(e, HASH[4]);\r\n      HASH[5] = safe_add(f, HASH[5]);\r\n      HASH[6] = safe_add(g, HASH[6]);\r\n      HASH[7] = safe_add(h, HASH[7]);\r\n    }\r\n    return HASH;\r\n  };\r\n\r\n  const str2binb = str => {\r\n    let bin = [];\r\n    let mask = (1 << chrsz) - 1;\r\n    for (let i = 0; i < str.length * chrsz; i += chrsz) {\r\n      bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << (24 - (i % 32));\r\n    }\r\n    return bin;\r\n  };\r\n\r\n  const Utf8Encode = string => {\r\n    string = string.replace(/\\r\\n/g, \"\\n\");\r\n    let utftext = \"\";\r\n    for (let n = 0; n < string.length; n++) {\r\n      let c = string.charCodeAt(n);\r\n      if (c < 128) {\r\n        utftext += String.fromCharCode(c);\r\n      } else if (c > 127 && c < 2048) {\r\n        utftext += String.fromCharCode((c >> 6) | 192);\r\n        utftext += String.fromCharCode((c & 63) | 128);\r\n      } else {\r\n        utftext += String.fromCharCode((c >> 12) | 224);\r\n        utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n        utftext += String.fromCharCode((c & 63) | 128);\r\n      }\r\n    }\r\n    return utftext;\r\n  };\r\n\r\n  const binb2hex = binarray => {\r\n    let hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\r\n    let str = \"\";\r\n    for (let i = 0; i < binarray.length * 4; i++) {\r\n      str +=\r\n        hex_tab.charAt((binarray[i >> 2] >> ((3 - (i % 4)) * 8 + 4)) & 0xf) +\r\n        hex_tab.charAt((binarray[i >> 2] >> ((3 - (i % 4)) * 8)) & 0xf);\r\n    }\r\n    return str;\r\n  };\r\n  s = Utf8Encode(s);\r\n\r\n  return binb2hex(core_sha256(str2binb(s), s.length * chrsz));\r\n};\r\n\r\nexport default sha256;\r\n","import { connect } from \"react-redux\";\r\nimport LogonDialog from \"./LogonDialog\";\r\nimport {\r\n  showLogonDialog,\r\n  handleLogonRequest,\r\n  handleLogoffRequest\r\n} from \"../../store/actions/index\";\r\nimport sha256 from \"./sha256\";\r\n\r\nconst mapStateToProps = state => {\r\n  const { admin } = state;\r\n  const { logonDialogOpen, djModeActive } = admin;\r\n\r\n  return {\r\n    logonDialogOpen,\r\n    djModeActive\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleClose: () => dispatch(showLogonDialog(false)),\r\n  handleSubmit: (djModeActive, password = null) => {\r\n    if (djModeActive) {\r\n      dispatch(handleLogoffRequest());\r\n    } else {\r\n      dispatch(handleLogonRequest(sha256(password)));\r\n    }\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LogonDialog);\r\n","import React from 'react';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n\r\nconst ReportSongIssue = props => {\r\n  const { submitSongIssue, anchorEl, handleClose } = props;\r\n\r\n  const list = [\r\n    'Song does not match label',\r\n    \"No Audio\",\r\n    \"No Words\",\r\n    \"Corrupted / Unusable\",\r\n    \"Song is incomplete\",\r\n    \"Other\"\r\n  ];\r\n\r\n  return (\r\n    <Menu\r\n      id=\"simple-menu\"\r\n      anchorEl={anchorEl}\r\n      keepMounted\r\n      open={Boolean(anchorEl)}\r\n      onClose={handleClose}\r\n    >\r\n      {list.map(e => <MenuItem key={e} onClick={() => submitSongIssue(e)}>{e}</MenuItem>)}\r\n    </Menu>\r\n  )\r\n};\r\n\r\nexport default ReportSongIssue;","import { connect } from \"react-redux\";\r\nimport ReportSongIssue from \"./ReportSongIssue\";\r\nimport { submitSongIssue } from \"../../store/actions/index\";\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  submitSongIssue: issue => dispatch(submitSongIssue(issue))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ReportSongIssue);","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\n\r\nimport ReportSongIssue from '../ReportSongIssue/ReportSongIssueConnector';\r\n\r\nimport logo from \"../../assets/images/logo-karaoke-png.png\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  dialogContainer: {\r\n    height: \"auto\",\r\n    overflowY: \"unset\"\r\n  },\r\n  heading: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  img: {\r\n    height: \"30px\"\r\n  }\r\n}));\r\n\r\nconst SelectedSongDialog = props => {\r\n  const {\r\n    selectedSong,\r\n    handleClose,\r\n    sendingRequest,\r\n    completeRequest,\r\n    submitRequest,\r\n    history\r\n  } = props;\r\n  const classes = useStyles();\r\n  const {\r\n    Title,\r\n    Artist,\r\n    DiscRef,\r\n    Key,\r\n    Length,\r\n    CompletedDateTime,\r\n    DateTime,\r\n    Singer\r\n  } = selectedSong || {};\r\n\r\n  const [name, setName] = React.useState(\"\");\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    setName('');\r\n    setAnchorEl(null);\r\n  }, [selectedSong]);\r\n\r\n  let dialogTitle = \"Request Slip\";\r\n  let actionButton = (\r\n    <Button\r\n      onClick={() =>\r\n        submitRequest(name, history)\r\n      }\r\n      disabled={name.length === 0 || sendingRequest}\r\n    >\r\n      {sendingRequest ? <CircularProgress size={24} /> : \"Submit\"}\r\n    </Button>\r\n  );\r\n\r\n  if (sendingRequest) {\r\n    dialogTitle = \"Submitting Request!\";\r\n  } else if (DateTime && !CompletedDateTime) {\r\n    actionButton = (\r\n      <Button onClick={() => completeRequest(selectedSong)}>Completed</Button>\r\n    );\r\n    dialogTitle = `Requested: ${DateTime.toLocaleString().match(\r\n      /[0-9]{1,2}:[0-9]{1,2}:[0-9]{1,2}/g\r\n    )}`;\r\n  } else if (CompletedDateTime) {\r\n    actionButton = <Button onClick={e => setAnchorEl(e.currentTarget)} >Report Issue</Button>;\r\n    dialogTitle = `Completed: ${CompletedDateTime.toLocaleString().match(\r\n      /[0-9]{1,2}:[0-9]{1,2}:[0-9]{1,2}/g\r\n    )}`;\r\n  }\r\n\r\n  const handleKeypress = e => {\r\n    const { key, target } = e;\r\n    const { value } = target;\r\n    if (key === 'Enter') {\r\n      submitRequest(name, history)\r\n    }\r\n\r\n    if (value.length <= 80) {\r\n      setName(value)\r\n    }\r\n  }\r\n\r\n  const closeDialog = () => {\r\n    if (!sendingRequest) {\r\n      handleClose();\r\n      setAnchorEl(null)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={Boolean(selectedSong)}\r\n      onClose={closeDialog}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        <div className={classes.heading}>\r\n          <Typography variant=\"inherit\">{dialogTitle}</Typography>\r\n          <img className={classes.img} src={logo} alt=\"logo\" />\r\n        </div>\r\n      </DialogTitle>\r\n      <DialogContent classes={{ root: classes.dialogContainer }}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            {Singer ? (\r\n              <TextField\r\n                id=\"name\"\r\n                label=\"Singer\"\r\n                value={Singer}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                disabled\r\n              />\r\n            ) : (\r\n                <TextField\r\n                  id=\"name\"\r\n                  label=\"Enter Your Name\"\r\n                  value={name}\r\n                  onChange={handleKeypress}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  autoFocus\r\n                  onKeyPress={handleKeypress}\r\n                />\r\n              )}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"title\"\r\n              label=\"Title\"\r\n              value={Title || \"\"}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              disabled\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"artist\"\r\n              label=\"Artist\"\r\n              value={Artist || \"\"}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              disabled\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              id=\"ref\"\r\n              label=\"Ref\"\r\n              value={DiscRef || \"\"}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              disabled\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              id=\"length\"\r\n              label=\"Length\"\r\n              value={Length || \"\"}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              disabled\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              id=\"key\"\r\n              label=\"Key\"\r\n              value={Key || \"\"}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              disabled\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {actionButton}\r\n        <Button onClick={handleClose} disabled={sendingRequest}>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n      <ReportSongIssue anchorEl={anchorEl} handleClose={() => setAnchorEl(null)} />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default withRouter(SelectedSongDialog);\r\n","import { connect } from \"react-redux\";\r\nimport SelectedSongDialog from \"./SelectedSongDialog\";\r\nimport {\r\n  clearSelectedSong,\r\n  submitRequest,\r\n  completeRequest\r\n} from \"../../store/actions/index\";\r\n\r\nconst mapStateToProps = state => {\r\n  const { results, api } = state;\r\n  const { selectedSong } = results;\r\n  const { sendingRequest } = api;\r\n  return {\r\n    selectedSong,\r\n    sendingRequest\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleClose: () => dispatch(clearSelectedSong()),\r\n  submitRequest: (singer, onSuccessAction) =>\r\n    dispatch(submitRequest(singer, onSuccessAction)),\r\n  completeRequest: obj => dispatch(completeRequest(obj)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SelectedSongDialog);\r\n","import React from \"react\";\r\nimport { Snackbar, Slide } from \"@material-ui/core\";\r\n\r\nconst Notification = props => {\r\n  const { notificationOpen, notificationMessage, closeNotification } = props;\r\n\r\n  const TransitionRight = props => {\r\n    return <Slide {...props} direction=\"left\" />;\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      open={notificationOpen}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n      onClose={closeNotification}\r\n      autoHideDuration={6000}\r\n      TransitionComponent={TransitionRight}\r\n      ContentProps={{\r\n        \"aria-describedby\": \"message-id\"\r\n      }}\r\n      message={<span id=\"message-id\">{notificationMessage}</span>}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import { connect } from \"react-redux\";\r\nimport Notification from \"./Notification\";\r\nimport { setNotificationOpen } from \"../../store/actions/index\";\r\n\r\nconst mapStateToProps = state => {\r\n  const { admin } = state;\r\n  const { notificationOpen, notificationMessage } = admin;\r\n\r\n  return {\r\n    notificationOpen,\r\n    notificationMessage\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  closeNotification: () => dispatch(setNotificationOpen(false))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Notification);\r\n","import React from \"react\";\r\nimport \"./Ticker.css\";\r\n\r\nconst Ticker = props => {\r\n  const { tickerString, djModeActive } = props;\r\n  if (djModeActive || tickerString.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const scrollSpeed = Math.ceil(tickerString.length / 10) * 1.5;\r\n\r\n  const style = {\r\n    animationDuration: scrollSpeed + \"s\"\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p style={{\r\n          position: 'fixed',\r\n          left: 0,\r\n          bottom: 0,\r\n          height: '25px',\r\n          margin: '0 auto',\r\n          padding: '0 8px',\r\n          backgroundColor: '#40a4c8',\r\n          color: 'white',\r\n          zIndex: 50,\r\n          display: 'inline-block',\r\n        }}>\r\n          <span>Requested:</span>\r\n        </p>\r\n      </div>\r\n      <div class=\"Ticker\" >\r\n        <p class=\"Marquee\" style={style}>\r\n          <span>{tickerString}</span>\r\n        </p>\r\n      </div>\r\n      <div id=\"padding-right\"\r\n        style={{\r\n          position: 'fixed',\r\n          right: 0,\r\n          bottom: 0,\r\n          minHeight: '25px',\r\n          minWidth: '8px',\r\n          backgroundColor: '#40a4c8',\r\n          zIndex: 50,\r\n          display: 'inline-block',\r\n        }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ticker;\r\n","import { connect } from \"react-redux\";\r\nimport Ticker from \"./Ticker\";\r\n\r\nconst mapStateToProps = state => {\r\n  const { admin, results } = state;\r\n  const { djModeActive } = admin;\r\n  const { tickerString } = results;\r\n\r\n  return {\r\n    djModeActive,\r\n    tickerString\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Ticker);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Toolbar from \"../../components/Toolbar/ToolbarConnector\";\r\nimport { TOOLBAR_HEIGHT } from \"../../constants/index\";\r\n\r\nimport LogonDialog from \"../../components/LogonDialog/LogonDialogConnector\";\r\nimport SelectedSongDialog from \"../../components/SelectedSongDialog/SelectedSongDialogConnector\";\r\nimport Notification from \"../../components/Notification/NotificationConnector\";\r\nimport Ticker from \"../../components/Ticker/TickerConnector\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  background: {\r\n    minWidth: \"100%\",\r\n    minHeight: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.text.primary\r\n  },\r\n  container: {\r\n    marginTop: TOOLBAR_HEIGHT,\r\n    background: \"inherit\",\r\n    minHeight: `calc(100vh - ${TOOLBAR_HEIGHT}px)`,\r\n  }\r\n}));\r\n\r\nconst Layout = props => {\r\n  const { children } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.background}>\r\n      <Toolbar />\r\n      <Container maxWidth=\"xl\" id=\"container\" className={classes.container}>\r\n        {children}\r\n      </Container>\r\n      <SelectedSongDialog />\r\n      <LogonDialog />\r\n      <Notification />\r\n      <Ticker />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  InputAdornment,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\n\r\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport {\r\n  SEARCH,\r\n  TOOLBAR_HEIGHT,\r\n  TITLE,\r\n  ARTIST,\r\n  BOTH,\r\n  RESULTS_PATH\r\n} from \"../../constants/index\";\r\n\r\nimport logo from \"../../assets/images/logo-karaoke-png.png\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  search: {\r\n    minHeight: `calc(100vh - ${TOOLBAR_HEIGHT}px - ${theme.spacing(3)}px)`\r\n  },\r\n  img: {\r\n    maxWidth: \"100%\"\r\n  },\r\n  centerContent: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    marginBottom: theme.spacing(4)\r\n  },\r\n  textField: {\r\n    maxWidth: \"75vw\",\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    margin: theme.spacing(2)\r\n  },\r\n  buttonGroup: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  button: {\r\n    height: \"100%\",\r\n    minHeight: 56,\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Search = props => {\r\n  const {\r\n    setSelectedButton,\r\n    history,\r\n    swipeLeftPath,\r\n    swipeRightPath,\r\n    search\r\n  } = props;\r\n  const classes = useStyles();\r\n\r\n  const [searchString, setSearchString] = React.useState(\"\");\r\n  const [searchBy, setSearchBy] = React.useState(BOTH);\r\n\r\n  const handlers = useSwipeable({\r\n    onSwipedLeft: () => history.push(swipeLeftPath),\r\n    onSwipedRight: () => history.push(swipeRightPath),\r\n    preventDefaultTouchmoveEvent: true,\r\n    trackMouse: true\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    setSelectedButton(SEARCH);\r\n    return () => {\r\n      setSelectedButton(null);\r\n    };\r\n  }, []);\r\n\r\n  const handleSearchByOnChange = value => {\r\n    if (value === null) {\r\n      return;\r\n    }\r\n\r\n    setSearchBy(value);\r\n  };\r\n\r\n  const handleKeypress = e => {\r\n    const { key, target } = e;\r\n    const { value } = target;\r\n    if (key === 'Enter') {\r\n      search(searchString, searchBy);\r\n      history.push(RESULTS_PATH);\r\n    }\r\n    setSearchString(value)\r\n  }\r\n\r\n  return (\r\n    <div id=\"search\" className={classes.search} {...handlers}>\r\n      <div className={classes.centerContent}>\r\n        <img src={logo} alt=\"logo\" className={classes.img} />\r\n      </div>\r\n      <div id=\"search=box\" className={classes.centerContent}>\r\n        <TextField\r\n          id=\"outlined-multiline-flexible\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon />\r\n              </InputAdornment>\r\n            ),\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  disabled={!searchString}\r\n                  onClick={() => setSearchString(\"\")}\r\n                >\r\n                  <Clear />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n          label=\"Search\"\r\n          value={searchString}\r\n          onChange={handleKeypress}\r\n          className={classes.textField}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          autoFocus\r\n          onKeyPress={handleKeypress}\r\n        />\r\n      </div>\r\n      <div className={classes.centerContent}>\r\n        <ToggleButtonGroup\r\n          size=\"large\"\r\n          value={searchBy}\r\n          exclusive\r\n          onChange={(event, value) => handleSearchByOnChange(value)}\r\n          className={classes.buttonGroup}\r\n        >\r\n          <ToggleButton key=\"title\" value={TITLE}>\r\n            <Typography>Title</Typography>\r\n          </ToggleButton>\r\n          <ToggleButton key=\"artist\" value={ARTIST}>\r\n            <Typography>Artist</Typography>\r\n          </ToggleButton>\r\n          <ToggleButton key=\"both\" value={BOTH}>\r\n            <Typography>Both</Typography>\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"outlined\"\r\n          disabled={searchString.length < 3}\r\n          onClick={() => {\r\n            search(searchString, searchBy);\r\n            history.push(RESULTS_PATH);\r\n          }}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Search);\r\n","import { connect } from \"react-redux\";\r\nimport Search from \"./Search\";\r\nimport { setSelectedButton, searchForSongs } from \"../../store/actions/index\";\r\nimport {\r\n  BROWSE_BY_ARTIST_PATH,\r\n  BROWSE_BY_TITLE_PATH,\r\n  REQUESTS_PATH\r\n} from \"../../constants/index\";\r\n\r\nconst mapStateToProps = state => {\r\n  const { admin } = state;\r\n  const { djModeActive } = admin;\r\n  return {\r\n    swipeLeftPath: BROWSE_BY_ARTIST_PATH,\r\n    swipeRightPath: djModeActive ? REQUESTS_PATH : BROWSE_BY_TITLE_PATH\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setSelectedButton: string => dispatch(setSelectedButton(string)),\r\n  search: (string, searchBy) =>\r\n    dispatch(searchForSongs(string, searchBy, false))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Search);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from \"@material-ui/core/\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport { TOOLBAR_HEIGHT } from \"../../constants/index\";\r\nimport logo from \"../../assets/images/logo-karaoke-png.png\";\r\n\r\nconst alphabet = [\r\n  \"A\",\r\n  \"B\",\r\n  \"C\",\r\n  \"D\",\r\n  \"E\",\r\n  \"F\",\r\n  \"G\",\r\n  \"H\",\r\n  \"I\",\r\n  \"J\",\r\n  \"K\",\r\n  \"L\",\r\n  \"M\",\r\n  \"N\",\r\n  \"O\",\r\n  \"P\",\r\n  \"Q\",\r\n  \"R\",\r\n  \"S\",\r\n  \"T\",\r\n  \"U\",\r\n  \"V\",\r\n  \"W\",\r\n  \"X\",\r\n  \"Y\",\r\n  \"Z\"\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  browseBy: {\r\n    minHeight: `calc(100vh - ${TOOLBAR_HEIGHT}px - ${theme.spacing(3)}px)`,\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-start\"\r\n  },\r\n  img: {\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\"\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    maxWidth: 1200\r\n  },\r\n  gridRow: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  gridSquare: {\r\n    padding: theme.spacing(1),\r\n    width: \"15vw\",\r\n    height: \"15vw\",\r\n    minWidth: 70,\r\n    minHeight: 70,\r\n    maxWidth: 170,\r\n    maxHeight: 170\r\n  },\r\n  gridRectangle: {\r\n    padding: theme.spacing(1),\r\n    width: \"30vw\",\r\n    height: \"15vw\",\r\n    minWidth: 130,\r\n    minHeight: 70,\r\n    maxWidth: 340,\r\n    maxHeight: 170\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    textTransform: \"none\"\r\n  }\r\n}));\r\n\r\nconst BrowseBy = props => {\r\n  const {\r\n    variant,\r\n    setSelectedButton,\r\n    width,\r\n    history,\r\n    swipeLeftPath,\r\n    swipeRightPath,\r\n    searchBy,\r\n    search\r\n  } = props;\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    setSelectedButton(variant);\r\n    return () => {\r\n      setSelectedButton(null);\r\n    };\r\n  }, [variant]);\r\n\r\n  const handleButtonClick = id => {\r\n    search(id, searchBy);\r\n    history.push(\"/results\");\r\n  };\r\n\r\n  const handlers = useSwipeable({\r\n    onSwipedLeft: () => history.push(swipeLeftPath),\r\n    onSwipedRight: () => history.push(swipeRightPath),\r\n    preventDefaultTouchmoveEvent: true,\r\n    trackMouse: true\r\n  });\r\n\r\n  const minFontSize = 1.0;\r\n  const maxFontSize = 5.0;\r\n  let fontSize;\r\n\r\n  if (width < 450) {\r\n    fontSize = minFontSize;\r\n  } else if (width >= 450 && width < 550) {\r\n    fontSize = 1.5;\r\n  } else if (width >= 550 && width < 650) {\r\n    fontSize = 2.0;\r\n  } else if (width >= 650 && width < 750) {\r\n    fontSize = 2.5;\r\n  } else if (width >= 750 && width < 850) {\r\n    fontSize = 3.0;\r\n  } else if (width >= 850 && width < 950) {\r\n    fontSize = 3.5;\r\n  } else if (width >= 950 && width < 1050) {\r\n    fontSize = 4.0;\r\n  } else if (width >= 1050 && width < 1150) {\r\n    fontSize = 4.5;\r\n  } else {\r\n    fontSize = maxFontSize;\r\n  }\r\n\r\n  const buttonStyle = {\r\n    fontSize: `${fontSize}em`\r\n  };\r\n\r\n  return (\r\n    <div className={classes.browseBy} {...handlers}>\r\n      <div className={classes.grid}>\r\n        <div className={classes.gridRow}>\r\n          {alphabet.map(e => (\r\n            <div key={e} className={classes.gridSquare}>\r\n              <Button\r\n                className={classes.button}\r\n                style={buttonStyle}\r\n                variant=\"outlined\"\r\n                onClick={() => handleButtonClick(e)}\r\n              >\r\n                {e}\r\n              </Button>\r\n            </div>\r\n          ))}\r\n          <div className={classes.gridRectangle}>\r\n            <Button\r\n              className={classes.button}\r\n              style={buttonStyle}\r\n              variant=\"outlined\"\r\n              onClick={() => handleButtonClick(\"0-9\")}\r\n            >\r\n              0-9\r\n            </Button>\r\n          </div>\r\n          <div className={classes.gridRectangle}>\r\n            <Button className={classes.button} style={buttonStyle} disabled>\r\n              <img src={logo} alt=\"logo\" className={classes.img} />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(BrowseBy);\r\n","import { connect } from \"react-redux\";\r\nimport BrowseBy from \"./BrowseBy\";\r\nimport { setSelectedButton, searchForSongs } from \"../../store/actions/index\";\r\nimport {\r\n  BROWSE_BY_TITLE,\r\n  BROWSE_BY_ARTIST_PATH,\r\n  BROWSE_BY_TITLE_PATH,\r\n  SEARCH_PATH,\r\n  ADMIN_PATH,\r\n} from \"../../constants/index\";\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { displayProperties, admin } = state;\r\n  const { width } = displayProperties;\r\n  const { djModeActive } = admin;\r\n  const { variant } = ownProps;\r\n\r\n  let swipeLeftPath = BROWSE_BY_TITLE_PATH;\r\n  let swipeRightPath = SEARCH_PATH;\r\n\r\n  if (variant === BROWSE_BY_TITLE) {\r\n    swipeLeftPath = djModeActive ? ADMIN_PATH : SEARCH_PATH;\r\n    swipeRightPath = BROWSE_BY_ARTIST_PATH;\r\n  }\r\n\r\n  return {\r\n    width,\r\n    swipeLeftPath,\r\n    swipeRightPath\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setSelectedButton: string => dispatch(setSelectedButton(string)),\r\n  search: (string, searchBy) => dispatch(searchForSongs(string, searchBy, true))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BrowseBy);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  List,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\r\nimport { Clear, Search, Error, FilterList } from \"@material-ui/icons\";\r\nimport { TOOLBAR_HEIGHT } from \"../../constants/index\";\r\n\r\nimport KaraokeSongSummaryListItem from \"../../components/KaraokeSongSummaryListItem/KaraokeSongSummaryListItemConnector\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  results: {\r\n    minHeight: `calc(100vh - ${TOOLBAR_HEIGHT}px)`\r\n  },\r\n  headerContainer: {\r\n    position: \"sticky\",\r\n    top: TOOLBAR_HEIGHT,\r\n    width: \"100%\",\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n    backgroundColor: theme.palette.background.paper,\r\n    zIndex: 100,\r\n  },\r\n  titleContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"baseline\"\r\n  },\r\n  hint: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  filterContainer: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  textField: {\r\n    maxWidth: \"50vw\",\r\n    marginRight: theme.spacing(3)\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  resultsList: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    minHeight: \"100%\",\r\n    marginBottom: \"20px\"\r\n  },\r\n  holding: {\r\n    position: \"fixed\",\r\n    left: 0,\r\n    top: \"40vh\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\"\r\n  },\r\n  list: {\r\n    marginBottom: \"20px\"\r\n  },\r\n  spinner: {\r\n    marginBottom: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const {\r\n    setSelectedButton,\r\n    searchResults,\r\n    gettingSearchResults,\r\n    clearSearchResults,\r\n    history\r\n  } = props;\r\n  const classes = useStyles();\r\n\r\n  const [filter, setFilter] = React.useState(\"\");\r\n  const [filterBy, setFilterBy] = React.useState(0);\r\n  const [filteredResults, setFilteredResults] = React.useState(searchResults);\r\n\r\n  const filterResults = () => {\r\n    const userInput = filter.toLowerCase();\r\n    setFilteredResults(\r\n      searchResults.filter(obj => {\r\n        const { Artist, Title } = obj;\r\n        const matchArtist = Artist.toLowerCase().includes(userInput);\r\n        const matchTitle = Title.toLowerCase().includes(userInput);\r\n\r\n        if (\r\n          (filterBy === 0 && matchTitle) ||\r\n          (filterBy === 1 && matchArtist) ||\r\n          (filterBy === 2 && (matchArtist || matchTitle))\r\n        ) {\r\n          return obj;\r\n        }\r\n\r\n        return null;\r\n      })\r\n    );\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setFilteredResults(searchResults);\r\n  }, [searchResults]);\r\n\r\n  React.useEffect(() => {\r\n    setSelectedButton(null);\r\n\r\n    return () => {\r\n      clearSearchResults();\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (filter.length === 0) {\r\n      setFilteredResults(searchResults);\r\n    } else if (filter.length >= 1) {\r\n      filterResults();\r\n    }\r\n  }, [filter, filterBy]);\r\n\r\n  React.useEffect(() => {\r\n    let redirect;\r\n    if (!gettingSearchResults && searchResults.length === 0) {\r\n      redirect = setTimeout(() => {\r\n        history.push(\"/\");\r\n      }, [7000]);\r\n    }\r\n\r\n    if (searchResults.length > 0) {\r\n      // cancel timeout when result returned after this has started\r\n      clearTimeout(redirect);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(redirect);\r\n    }\r\n  }, [gettingSearchResults, searchResults]);\r\n\r\n  const disableFilter = gettingSearchResults || searchResults.length === 0;\r\n\r\n  const handleFilterByOnChange = value => {\r\n    if (value === null) {\r\n      return;\r\n    }\r\n\r\n    setFilterBy(value);\r\n  };\r\n\r\n  let pageContent;\r\n  if (gettingSearchResults) {\r\n    pageContent = (\r\n      <div className={classes.holding}>\r\n        <CircularProgress className={classes.spinner} size={100} />\r\n        <Typography>Getting search results...</Typography>\r\n      </div>\r\n    );\r\n  } else if (searchResults.length === 0) {\r\n    pageContent = (\r\n      <div className={classes.holding}>\r\n        <Error fontSize=\"large\" />\r\n        <Typography>There are no results matching your search</Typography>\r\n        <Typography>Please try again</Typography>\r\n      </div>\r\n    );\r\n  } else {\r\n    pageContent = (\r\n      <List className={classes.list}>\r\n        {filteredResults.map(obj => (\r\n          <KaraokeSongSummaryListItem key={obj.UID} songObj={obj} />\r\n        ))}\r\n      </List>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.results}>\r\n      <div id=\"header-container\" className={classes.headerContainer}>\r\n        <div id=\"title-container\" className={classes.titleContainer}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Search Results\r\n          </Typography>\r\n          <div className={classes.hint}>\r\n            <Search />\r\n            <Typography>Select a song to submit a request</Typography>\r\n          </div>\r\n        </div>\r\n        <div id=\"search=box\" className={classes.filterContainer}>\r\n          <TextField\r\n            id=\"filter-text-field\"\r\n            label=\"Filter results\"\r\n            value={filter}\r\n            onChange={e => setFilter(e.target.value)}\r\n            className={classes.textField}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            disabled={disableFilter}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <FilterList />\r\n                </InputAdornment>\r\n              ),\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton disabled={!filter} onClick={() => setFilter(\"\")}>\r\n                    <Clear />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n          <ToggleButtonGroup\r\n            size=\"large\"\r\n            value={filterBy}\r\n            exclusive\r\n            onChange={(event, value) => handleFilterByOnChange(value)}\r\n          >\r\n            <ToggleButton key=\"title\" value={0} disabled={disableFilter}>\r\n              <Typography>Title</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton key=\"artist\" value={1} disabled={disableFilter}>\r\n              <Typography>Artist</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton key=\"both\" value={2} disabled={disableFilter}>\r\n              <Typography>Both</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </div>\r\n      </div>\r\n      <div id=\"results-list\" className={classes.resultsList}>\r\n        {pageContent}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Results);\r\n","import { connect } from \"react-redux\";\r\nimport Results from \"./Results\";\r\nimport { setSelectedButton, clearSearchResults } from \"../../store/actions/index\";\r\n\r\nconst mapStateToProps = state => {\r\n  const { results, api } = state;\r\n  const { searchResults } = results;\r\n  const { gettingSearchResults } = api;\r\n  return {\r\n    searchResults,\r\n    gettingSearchResults\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setSelectedButton: string => dispatch(setSelectedButton(string)),\r\n  clearSearchResults: () => dispatch(clearSearchResults())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Results);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, Typography, LinearProgress, Box } from \"@material-ui/core\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport { TOOLBAR_HEIGHT } from \"../../constants/index\";\r\n\r\nimport logo from \"../../assets/images/logo-karaoke-png.png\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  success: {\r\n    minHeight: `calc(100vh - ${TOOLBAR_HEIGHT}px - ${theme.spacing(3)}px)`\r\n  },\r\n  img: {\r\n    maxWidth: \"100%\"\r\n  },\r\n  centerContent: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    marginBottom: theme.spacing(4)\r\n  },\r\n  message: {\r\n    width: \"60vw\",\r\n    minWidth: \"460px\"\r\n  },\r\n  box: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  boldBox: {\r\n    marginRight: theme.spacing(1),\r\n    color: theme.palette.highlightColor\r\n  },\r\n  countdown: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Success = props => {\r\n  const { history, successfulRequestDetails } = props;\r\n  const classes = useStyles();\r\n  const { Singer, Title, Artist } = successfulRequestDetails || {};\r\n\r\n  const handlers = useSwipeable({\r\n    onSwipedLeft: () => history.push(\"/\"),\r\n    onSwipedRight: () => history.push(\"/\"),\r\n    preventDefaultTouchmoveEvent: true,\r\n    trackMouse: true\r\n  });\r\n\r\n  const [completed, setCompleted] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function progress() {\r\n      setCompleted(oldCompleted => {\r\n        if (oldCompleted === 100) {\r\n          history.push(\"/\");\r\n        }\r\n        return Math.min(oldCompleted + 1, 100);\r\n      });\r\n    }\r\n\r\n    const timer = setInterval(progress, 100);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"success\" className={classes.success} {...handlers}>\r\n      <div className={classes.centerContent}>\r\n        <img src={logo} alt=\"logo\" className={classes.img} />\r\n      </div>\r\n      <div className={classes.centerContent}>\r\n        <div className={classes.message}>\r\n          <Typography paragraph component=\"div\">\r\n            <Box className={classes.box} display=\"inline\">\r\n              Thank you\r\n            </Box>\r\n            <Box\r\n              className={classes.boldBox}\r\n              display=\"inline\"\r\n              fontWeight=\"fontWeightBold\"\r\n            >\r\n              {Singer}\r\n            </Box>\r\n            <Box className={classes.box} display=\"inline\">\r\n              for your request of\r\n            </Box>\r\n            <Box\r\n              className={classes.boldBox}\r\n              display=\"inline\"\r\n              fontWeight=\"fontWeightBold\"\r\n            >\r\n              {Title}\r\n            </Box>\r\n            <Box className={classes.box} display=\"inline\">\r\n              in the style of\r\n            </Box>\r\n            <Box\r\n              className={classes.boldBox}\r\n              display=\"inline\"\r\n              fontWeight=\"fontWeightBold\"\r\n            >\r\n              {Artist}.\r\n            </Box>\r\n            <Box className={classes.box} display=\"inline\">\r\n              It has been submitted to the DJ.\r\n            </Box>\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Keep listening and you will be called when it's your turn to sing.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            While you're waiting why not request another?\r\n          </Typography>\r\n          <div>\r\n            <Typography variant=\"caption\" align=\"center\" gutterBottom>\r\n              Please note the DJ will not be able to tell you how long untill\r\n              you are called. Please be patient.\r\n            </Typography>\r\n            <LinearProgress\r\n              className={classes.countdown}\r\n              variant=\"determinate\"\r\n              value={completed}\r\n              color=\"secondary\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Success);\r\n","import { connect } from \"react-redux\";\r\nimport Success from \"./Success\";\r\n\r\nconst mapStateToProps = state => {\r\n  const { results } = state;\r\n  const { successfulRequestDetails } = results;\r\n\r\n  return {\r\n    successfulRequestDetails\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Success);\r\n","import React, { Suspense } from \"react\";\r\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { createMuiTheme, CssBaseline } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nimport AppListeners from \"./components/AppListeners/AppListenersConnector\";\r\nimport Home from \"./containers/Home/HomeConnector\";\r\nimport Layout from \"./containers/Layout/Layout\";\r\nimport Search from \"./containers/Search/SearchConnector\";\r\nimport BrowseBy from \"./containers/BrowseBy/BrowseByConnector\";\r\nimport Results from \"./containers/Results/ResultsConnector\";\r\nimport Success from \"./containers/Success/SuccessConnector\";\r\n\r\nimport {\r\n  SEARCH,\r\n  BROWSE_BY_ARTIST,\r\n  BROWSE_BY_TITLE,\r\n  REQUESTS,\r\n  ADMIN,\r\n  SEARCH_PATH,\r\n  BROWSE_BY_ARTIST_PATH,\r\n  BROWSE_BY_TITLE_PATH,\r\n  RESULTS_PATH,\r\n  REQUESTS_PATH,\r\n  ADMIN_PATH,\r\n  SUCCESS_PATH,\r\n  ARTIST,\r\n  TITLE,\r\n} from \"./constants/index\";\r\n\r\nconst Requests = React.lazy(() =>\r\n  import(\"./containers/Requests/RequestsConnector\")\r\n);\r\n\r\nconst Admin = React.lazy(() =>\r\n  import(\"./containers/Admin/AdminConnector\")\r\n);\r\n\r\n\r\nconst App = props => {\r\n  const { setToolbarOptions, djModeActive } = props;\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: \"dark\",\r\n      highlightColor: \"#00FF00\"\r\n    },\r\n    overrides: {\r\n      MuiAppBar: {\r\n        colorPrimary: {\r\n          backgroundColor: \"#292929\"\r\n        }\r\n      },\r\n      MuiCircularProgress: {\r\n        colorPrimary: {\r\n          color: \"#00FF00\"\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  let routes = (\r\n    <Switch>\r\n      <Route path={SEARCH_PATH} exact component={Search} />\r\n      <Route\r\n        path={BROWSE_BY_ARTIST_PATH}\r\n        exact\r\n        render={() => <BrowseBy variant={BROWSE_BY_ARTIST} searchBy={ARTIST} />}\r\n      />\r\n      <Route\r\n        path={BROWSE_BY_TITLE_PATH}\r\n        exact\r\n        render={() => <BrowseBy variant={BROWSE_BY_TITLE} searchBy={TITLE} />}\r\n      />\r\n      <Route path={RESULTS_PATH} exact component={Results} />\r\n      <Route path={SUCCESS_PATH} exact component={Success} />\r\n      <Route path=\"/\" component={Home} />\r\n    </Switch>\r\n  );\r\n\r\n  const toolbarOptions = [\r\n    {\r\n      buttonType: SEARCH,\r\n      path: SEARCH_PATH\r\n    },\r\n    {\r\n      buttonType: BROWSE_BY_ARTIST,\r\n      path: BROWSE_BY_ARTIST_PATH\r\n    },\r\n    {\r\n      buttonType: BROWSE_BY_TITLE,\r\n      path: BROWSE_BY_TITLE_PATH\r\n    }\r\n  ];\r\n\r\n  if (djModeActive) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path={SEARCH_PATH} exact component={Search} />\r\n        <Route\r\n          path={BROWSE_BY_ARTIST_PATH}\r\n          exact\r\n          render={() => (\r\n            <BrowseBy variant={BROWSE_BY_ARTIST} searchBy={ARTIST} />\r\n          )}\r\n        />\r\n        <Route\r\n          path={BROWSE_BY_TITLE_PATH}\r\n          exact\r\n          render={() => <BrowseBy variant={BROWSE_BY_TITLE} searchBy={TITLE} />}\r\n        />\r\n        <Route path={RESULTS_PATH} exact component={Results} />\r\n        <Route path={REQUESTS_PATH} exact component={Requests} />\r\n        <Route path={SUCCESS_PATH} exact component={Success} />\r\n        <Route path={ADMIN_PATH} exact component={Admin} />\r\n        <Route path=\"/\" component={Home} />\r\n      </Switch>\r\n    );\r\n\r\n    toolbarOptions.unshift({\r\n      buttonType: REQUESTS,\r\n      path: REQUESTS_PATH\r\n    });\r\n\r\n    toolbarOptions.push({\r\n      buttonType: ADMIN,\r\n      path: ADMIN_PATH\r\n    });\r\n  }\r\n\r\n  setToolbarOptions(toolbarOptions);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <AppListeners />\r\n      <Router>\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Layout>{routes}</Layout>\r\n        </Suspense>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { connect } from 'react-redux';\r\nimport App from './App';\r\nimport { setToolbarOptions } from './store/actions'\r\n\r\nconst mapStateToProps = state => {\r\n  const { admin } = state;\r\n  const { djModeActive } = admin;\r\n  return {\r\n    djModeActive,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setToolbarOptions: array => dispatch(setToolbarOptions(array))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import * as actionTypes from \"../actionTypes/admin\";\r\n\r\nconst initialState = {\r\n  logonDialogOpen: false,\r\n  djModeActive: false,\r\n  baseUrl: null,\r\n  notificationOpen: false,\r\n  notificationMessage: null,\r\n  token: null\r\n};\r\n\r\nconst showLogonDialog = (state, action) => ({\r\n  ...state,\r\n  logonDialogOpen: action.bool\r\n});\r\n\r\nconst setDjModeActive = (state, action) => ({\r\n  ...state,\r\n  djModeActive: action.bool\r\n});\r\n\r\nconst setBaseUrl = (state, action) => ({\r\n  ...state,\r\n  baseUrl: action.url\r\n});\r\n\r\nconst setNotificationOpen = (state, action) => ({\r\n  ...state,\r\n  notificationOpen: action.bool\r\n});\r\n\r\nconst setNotificationMessage = (state, action) => ({\r\n  ...state,\r\n  notificationMessage: action.string\r\n});\r\n\r\nconst setToken = (state, action) => ({\r\n  ...state,\r\n  token: action.token\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SHOW_LOGON_DIALOG:\r\n      return showLogonDialog(state, action);\r\n    case actionTypes.SET_DJ_MODE_ACTIVE:\r\n      return setDjModeActive(state, action);\r\n    case actionTypes.SET_BASE_URL:\r\n      return setBaseUrl(state, action);\r\n    case actionTypes.SET_NOTIFICATION_OPEN:\r\n      return setNotificationOpen(state, action);\r\n    case actionTypes.SET_NOTIFICATION_MESSAGE:\r\n      return setNotificationMessage(state, action);\r\n    case actionTypes.SET_TOKEN:\r\n      return setToken(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actionTypes/api\";\r\n\r\nconst initialState = {\r\n  gettingSearchResults: false,\r\n  sendingRequest: false,\r\n  pollStatus: '',\r\n};\r\n\r\nconst setSendingRequest = (state, action) => ({\r\n  ...state,\r\n  sendingRequest: action.bool\r\n});\r\n\r\nconst gettingSearchResults = (state, action) => ({\r\n  ...state,\r\n  gettingSearchResults: action.bool\r\n});\r\n\r\nconst setPollForRequestStatus = (state, action) => ({\r\n  ...state,\r\n  pollStatus: action.string,\r\n})\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_SENDING_REQUEST:\r\n      return setSendingRequest(state, action);\r\n    case actionTypes.SET_GETTING_SEARCH_RESULTS:\r\n      return gettingSearchResults(state, action);\r\n    case actionTypes.SET_POLL_FOR_REQUEST_STATUS:\r\n      return setPollForRequestStatus(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actionTypes/displayProperties';\r\n\r\nexport const initialState = {\r\n  height: window.innerHeight,\r\n  width: window.innerWidth,\r\n  isLandscape: window.innerHeight >= window.innerWidth,\r\n};\r\n\r\nconst setWindowHeightWidth = (state, action) => {\r\n  const { height, width } = action;\r\n  return {\r\n    ...state,\r\n    height,\r\n    width,\r\n  };\r\n};\r\n\r\nconst setIsLandscape = (state, action) => ({\r\n  ...state,\r\n  isLandscape: action.bool,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_WINDOW_HEIGHT_WIDTH:\r\n      return setWindowHeightWidth(state, action);\r\n    case actionTypes.SET_IS_LANDSCAPE:\r\n      return setIsLandscape(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actionTypes/results\";\r\n\r\nconst initialState = {\r\n  searchResults: [],\r\n  selectedSong: null,\r\n  songRequests: [],\r\n  completedSongRequests: [],\r\n  tickerString: \"\",\r\n  successfulRequestDetails: null\r\n};\r\n\r\nconst clearSearchResults = state => ({\r\n  ...state,\r\n  searchResults: []\r\n});\r\n\r\nconst setSearchResults = (state, action) => ({\r\n  ...state,\r\n  searchResults: action.array\r\n});\r\n\r\nconst clearSelectedSong = state => ({\r\n  ...state,\r\n  selectedSong: null\r\n});\r\n\r\nconst setSelectedSong = (state, action) => ({\r\n  ...state,\r\n  selectedSong: action.obj\r\n});\r\n\r\nconst setSongRequests = (state, action) => ({\r\n  ...state,\r\n  songRequests: action.array\r\n});\r\n\r\nconst setCompletedSongRequests = (state, action) => ({\r\n  ...state,\r\n  completedSongRequests: action.array\r\n});\r\n\r\nconst setTickerString = (state, action) => ({\r\n  ...state,\r\n  tickerString: action.string\r\n});\r\n\r\nconst setSuccessfulRequestDetails = (state, action) => ({\r\n  ...state,\r\n  successfulRequestDetails: action.obj\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CLEAR_SEARCH_RESULTS:\r\n      return clearSearchResults(state);\r\n    case actionTypes.SET_SEARCH_RESULTS:\r\n      return setSearchResults(state, action);\r\n    case actionTypes.CLEAR_SELECTED_SONG:\r\n      return clearSelectedSong(state);\r\n    case actionTypes.SET_SELECTED_SONG:\r\n      return setSelectedSong(state, action);\r\n    case actionTypes.SET_SONG_REQUESTS:\r\n      return setSongRequests(state, action);\r\n    case actionTypes.SET_COMPLETED_SONG_REQUESTS:\r\n      return setCompletedSongRequests(state, action);\r\n    case actionTypes.SET_TICKER_STRING:\r\n      return setTickerString(state, action);\r\n    case actionTypes.SET_SUCCESSFUL_REQUEST_DETAILS:\r\n      return setSuccessfulRequestDetails(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actionTypes/toolbar';\r\n\r\nconst initialState = {\r\n  selectedButton: null,\r\n  toolbarOptions: [],\r\n  showLogonButton: true,\r\n};\r\n\r\nconst setSelectedButton = (state, action) => ({\r\n  ...state,\r\n  selectedButton: action.string,\r\n});\r\n\r\nconst setToolbarOptions = (state, action) => ({\r\n  ...state,\r\n  toolbarOptions: action.array,\r\n})\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_SELECTED_BUTTON:\r\n      return setSelectedButton(state, action);\r\n    case actionTypes.SET_TOOLBAR_OPTIONS:\r\n      return setToolbarOptions(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actionTypes/browseCache';\r\nimport { ARTIST, TITLE } from '../../constants/index';\r\n\r\nconst initialState = {\r\n  artist: {},\r\n  title: {},\r\n};\r\n\r\nconst addToArtistCache = (state, action) => {\r\n  const { id, array } = action;\r\n  const newArtist = {\r\n    ...state.artist,\r\n    [id]: array,\r\n  };\r\n\r\n  return {\r\n    ...state,\r\n    artist: newArtist\r\n  }\r\n}\r\n\r\nconst addToTitleCache = (state, action) => {\r\n  const { id, array } = action;\r\n  const newTitle = {\r\n    ...state.artist,\r\n    [id]: array,\r\n  };\r\n\r\n  return {\r\n    ...state,\r\n    title: newTitle\r\n  }\r\n}\r\n\r\nconst addToBrowseCache = (state, action) => {\r\n  const { searchBy } = action;\r\n\r\n  if (searchBy === ARTIST) {\r\n    return addToArtistCache(state, action);\r\n  }\r\n\r\n  if (searchBy === TITLE) {\r\n    return addToTitleCache(state, action);\r\n  }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_TO_BROWSE_CACHE:\r\n      return addToBrowseCache(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\nimport admin from \"./admin\";\r\nimport api from \"./api\";\r\nimport displayProperties from \"./displayProperties\";\r\nimport results from \"./results\";\r\nimport toolbar from \"./toolbar\";\r\nimport browseCache from './browseCache'\r\n\r\nexport default combineReducers({\r\n  admin,\r\n  api,\r\n  browseCache,\r\n  displayProperties,\r\n  results,\r\n  toolbar\r\n});\r\n","import { delay, call, take, put, race } from 'redux-saga/effects';\r\nimport { getRequests } from '../actions';\r\nimport { START_POLL_FOR_REQUESTS, STOP_POLL_FOR_REQUESTS } from '../actionTypes/api'\r\n\r\nfunction* pollForRequests() {\r\n  while (true) {\r\n    try {\r\n      yield put(getRequests());\r\n      yield delay(60000);\r\n    } catch (err) {\r\n      yield delay(10000);\r\n    }\r\n  }\r\n}\r\n\r\nfunction* watcherSaga() {\r\n  while (true) {\r\n    yield take(START_POLL_FOR_REQUESTS);\r\n    yield race([call(pollForRequests), take(STOP_POLL_FOR_REQUESTS)]);\r\n  }\r\n}\r\n\r\nexport default watcherSaga;\r\n","import { delay, call, take, put, race } from \"redux-saga/effects\";\r\nimport { getSubmittedRequests } from \"../actions\";\r\nimport {\r\n  START_POLL_FOR_TICKER,\r\n  STOP_POLL_FOR_TICKER\r\n} from \"../actionTypes/api\";\r\n\r\nfunction* pollForSubmittedRequests() {\r\n  while (true) {\r\n    try {\r\n      yield put(getSubmittedRequests());\r\n      yield delay(180000);\r\n    } catch (err) {\r\n      yield delay(10000);\r\n    }\r\n  }\r\n}\r\n\r\nfunction* watcherSaga() {\r\n  while (true) {\r\n    yield take(START_POLL_FOR_TICKER);\r\n    yield race([call(pollForSubmittedRequests), take(STOP_POLL_FOR_TICKER)]);\r\n  }\r\n}\r\n\r\nexport default watcherSaga;\r\n","export const getBaseUrl = state => state.admin.baseUrl;\r\nexport const getToken = state => state.admin.token;\r\nexport const getArtistBrowseCache = state => state.browseCache.artist;\r\nexport const getTitleBrowseCache = state => state.browseCache.title;\r\nexport const getSongRequests = state => state.results.songRequests;\r\nexport const getCompletedSongRequests = state => state.results.completedSongRequests;\r\nexport const getSelectedSong = state => state.results.selectedSong;\r\n","import { takeLatest, call, put, select } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport { GET_REQUESTS } from \"../actionTypes/api\";\r\nimport { getBaseUrl } from \"./selectors\";\r\nimport {\r\n  setSongRequests,\r\n  setCompletedSongRequests,\r\n  setPollForRequestStatus\r\n} from \"../actions/index\";\r\n\r\nconst sortArrayByDateTime = array => {\r\n  return array.sort((a, b) => {\r\n    if (a.DateTime < b.DateTime) {\r\n      return -1;\r\n    }\r\n\r\n    if (a.DateTime > b.DateTime) {\r\n      return 1;\r\n    }\r\n\r\n    return 0;\r\n  });\r\n};\r\n\r\nconst sortArrayByCompletedDateTime = array => {\r\n  // reverse sort\r\n  return array.sort((a, b) => {\r\n    if (a.CompletedDateTime > b.CompletedDateTime) {\r\n      return -1;\r\n    }\r\n\r\n    if (a.CompletedDateTime < b.CompletedDateTime) {\r\n      return 1;\r\n    }\r\n\r\n    return 0;\r\n  });\r\n};\r\n\r\nfunction* getRequests() {\r\n  const baseUrl = yield select(getBaseUrl);\r\n  yield put(setPollForRequestStatus('Updating...'));\r\n\r\n  try {\r\n    const response = yield call(axios.get, `${baseUrl}/submitted-requests`);\r\n    const { data } = response;\r\n\r\n    let pending = [];\r\n    let completed = [];\r\n\r\n    for (let i = 0; i < data.length; i += 1) {\r\n      const request = data[i];\r\n      const { State } = request;\r\n\r\n      if (State === \"completed\") {\r\n        completed.push(request);\r\n      } else {\r\n        pending.push(request);\r\n      }\r\n    }\r\n\r\n    // sort the arrays\r\n    pending = sortArrayByDateTime(pending);\r\n    completed = sortArrayByCompletedDateTime(completed);\r\n\r\n    // number the pending requests;\r\n    pending = pending.map((obj, i) => ({\r\n      ...obj,\r\n      Position: i + 1,\r\n    }));\r\n\r\n    yield put(setSongRequests(pending));\r\n    yield put(setCompletedSongRequests(completed));\r\n    yield put(setPollForRequestStatus(`Updated: ${new Date().toLocaleTimeString()}`));\r\n  } catch (error) {\r\n    yield put(setPollForRequestStatus(`Update failed: ${error}`));\r\n  }\r\n}\r\n\r\nfunction* watcherSaga() {\r\n  yield takeLatest(GET_REQUESTS, getRequests);\r\n}\r\n\r\nexport default watcherSaga;\r\n","import { takeLatest, call, put, select } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport { getBaseUrl, getToken } from \"./selectors\";\r\nimport {\r\n  HANDLE_LOGON_REQUEST,\r\n  HANDLE_LOGOFF_REQUEST\r\n} from \"../actionTypes/admin\";\r\nimport {\r\n  showLogonDialog,\r\n  setDjModeActive,\r\n  setNotificationOpen,\r\n  setNotificationMessage,\r\n  setToken\r\n} from \"../actions/index\";\r\n\r\nfunction* requestLogon(action) {\r\n  const { credentials } = action;\r\n  const baseUrl = yield select(getBaseUrl);\r\n  try {\r\n    const response = yield call(axios.post, `${baseUrl}/admin-task`, {\r\n      task: \"login\",\r\n      value: credentials\r\n    });\r\n\r\n    const { data } = response;\r\n    const { token } = data;\r\n\r\n    yield put(setToken(token));\r\n    yield put(setDjModeActive(true));\r\n  } catch (error) {\r\n    yield put(setNotificationMessage(`Error logging on: ${error}`));\r\n    yield put(setNotificationOpen(true));\r\n  }\r\n\r\n  yield put(showLogonDialog(false));\r\n}\r\n\r\nfunction* requestLogoff() {\r\n  const baseUrl = yield select(getBaseUrl);\r\n  const token = yield select(getToken);\r\n\r\n  try {\r\n    yield call(\r\n      axios.post,\r\n      `${baseUrl}/admin-task`,\r\n      {\r\n        task: \"logout\"\r\n      },\r\n      { headers: { \"X-Auth-Token\": token } }\r\n    );\r\n\r\n    yield put(setToken(\"\"));\r\n    yield put(setDjModeActive(false));\r\n  } catch (error) {\r\n    yield put(setNotificationMessage(`Error logging off: ${error}`));\r\n    yield put(setNotificationOpen(true));\r\n  }\r\n\r\n  yield put(showLogonDialog(false));\r\n}\r\n\r\nfunction* watcherSaga() {\r\n  yield takeLatest(HANDLE_LOGON_REQUEST, requestLogon);\r\n  yield takeLatest(HANDLE_LOGOFF_REQUEST, requestLogoff);\r\n}\r\n\r\nexport default watcherSaga;\r\n","import { takeLatest, call, put, select } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport uuidv1 from \"uuid/v1\";\r\nimport { SUBMIT_REQUEST } from \"../actionTypes/api\";\r\nimport { getBaseUrl, getSelectedSong } from \"./selectors\";\r\nimport {\r\n  setSendingRequest,\r\n  setSelectedSong,\r\n  setNotificationMessage,\r\n  setNotificationOpen,\r\n  setSuccessfulRequestDetails\r\n} from \"../actions/index\";\r\nimport { SUCCESS_PATH } from \"../../constants/index\";\r\n\r\nfunction* submitRequest(action) {\r\n  const { singer, history } = action;\r\n  const baseUrl = yield select(getBaseUrl);\r\n  const songObj = yield select(getSelectedSong);\r\n\r\n  yield put(setSendingRequest(true));\r\n  const body = {\r\n    ...songObj,\r\n    RequestID: uuidv1(),\r\n    Singer: singer,\r\n    State: \"pending\",\r\n    CompletedDateTime: 0\r\n  };\r\n\r\n  try {\r\n    yield call(axios.post, `${baseUrl}/new-request`, body);\r\n    yield put(setSelectedSong(null));\r\n    yield put(setSuccessfulRequestDetails(body));\r\n\r\n    // bit of a hack to stop the redirect catching.\r\n    try {\r\n      yield call(history.push(SUCCESS_PATH));\r\n    } catch (e) {\r\n      // do nothing\r\n    }\r\n\r\n  } catch (error) {\r\n    yield put(\r\n      setNotificationMessage(`Error submitting request, please try again`)\r\n    );\r\n    yield put(setNotificationOpen(true));\r\n  }\r\n\r\n  yield put(setSendingRequest(false));\r\n}\r\n\r\nfunction* watcherSaga() {\r\n  yield takeLatest(SUBMIT_REQUEST, submitRequest);\r\n}\r\n\r\nexport default watcherSaga;\r\n","import { takeLatest, call, put, select } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport { SEARCH_FOR_SONGS } from \"../actionTypes/api\";\r\nimport { getBaseUrl, getArtistBrowseCache, getTitleBrowseCache } from \"./selectors\";\r\nimport {\r\n  setGettingSearchResults,\r\n  setNotificationMessage,\r\n  setNotificationOpen,\r\n  setSearchResults,\r\n  addToBrowseCache,\r\n} from \"../actions/index\";\r\nimport { TITLE, ARTIST } from \"../../constants/index\";\r\n\r\nconst processSearchResults = (data, searchBy) => {\r\n  let sortKey1 = ARTIST;\r\n  let sortKey2 = TITLE;\r\n  if (searchBy === TITLE) {\r\n    sortKey1 = TITLE;\r\n    sortKey2 = ARTIST;\r\n  }\r\n  return data.sort((a, b) => {\r\n    if (a[sortKey1] < b[sortKey1]) {\r\n      return -1;\r\n    }\r\n\r\n    if (a[sortKey1] > b[sortKey1]) {\r\n      return 1;\r\n    }\r\n\r\n    // If it's got this far the now sort by the second key\r\n    if (a[sortKey2] < b[sortKey2]) {\r\n      return -1;\r\n    }\r\n\r\n    if (a[sortKey2] > b[sortKey2]) {\r\n      return 1;\r\n    }\r\n\r\n    return 0;\r\n  });\r\n};\r\n\r\nfunction* searchForSongs(action) {\r\n  const { string, searchBy, browse } = action;\r\n  const baseUrl = yield select(getBaseUrl);\r\n  let cache = {};\r\n  let loadedFromCache = false;\r\n\r\n  yield put(setGettingSearchResults(true));\r\n\r\n  // check if these results have been cached\r\n  if (browse) {\r\n    if (searchBy === ARTIST) {\r\n      cache = yield select(getArtistBrowseCache);\r\n    }\r\n\r\n    if (searchBy === TITLE) {\r\n      cache = yield select(getTitleBrowseCache);\r\n    }\r\n\r\n    const cachedResults = cache[string] || [];\r\n\r\n    if (cachedResults && cachedResults.length > 0) {\r\n      yield put(setSearchResults(cache[string]));\r\n      loadedFromCache = true;\r\n\r\n      // close the spinner and continue in the background\r\n      yield put(setGettingSearchResults(false));\r\n    }\r\n  }\r\n\r\n  // create the query\r\n  const query = `?value=${encodeURI(\r\n    string\r\n  )}&searchby=${searchBy.toLowerCase()}&browse=${browse}`;\r\n\r\n  try {\r\n    const response = yield call(axios.get, `${baseUrl}/find-songs${query}`);\r\n    const { data } = response;\r\n    const sortedResults = processSearchResults(data, searchBy);\r\n\r\n    if (!loadedFromCache) {\r\n      yield put(setSearchResults(sortedResults));\r\n      yield put(setGettingSearchResults(false));\r\n    }\r\n\r\n    if (browse) {\r\n      yield put(addToBrowseCache(string, sortedResults, searchBy));\r\n    }\r\n\r\n  } catch (error) {\r\n    if (!loadedFromCache) {\r\n      yield put(\r\n        setNotificationMessage(`Error whist searching, please try again`)\r\n      );\r\n      yield put(setNotificationOpen(true));\r\n    }\r\n    yield put(setGettingSearchResults(false));\r\n  }\r\n}\r\n\r\nfunction* watcherSaga() {\r\n  yield takeLatest(SEARCH_FOR_SONGS, searchForSongs);\r\n}\r\n\r\nexport default watcherSaga;\r\n","import { takeLatest, call, put, select } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport { GET_SUBMITTED_REQUESTS } from \"../actionTypes/api\";\r\nimport { getBaseUrl } from \"./selectors\";\r\nimport { setTickerString } from \"../actions/index\";\r\n\r\nconst createString = data => {\r\n  const strings = data.map(obj => `${obj.Title} in the style of ${obj.Artist}`);\r\n\r\n  // randomize order\r\n  let currentIndex = strings.length;\r\n  let temporaryValue;\r\n  let randomIndex;\r\n\r\n  while (0 !== currentIndex) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    // And swap it with the current element.\r\n    temporaryValue = strings[currentIndex];\r\n    strings[currentIndex] = strings[randomIndex];\r\n    strings[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return strings.join(\" -♦- \");\r\n};\r\n\r\nfunction* getRequests() {\r\n  const baseUrl = yield select(getBaseUrl);\r\n\r\n  try {\r\n    const response = yield call(axios.get, `${baseUrl}/submitted-requests`);\r\n    const { data } = response;\r\n    yield put(setTickerString(data.length < 3 ? \"\" : createString(data)));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction* watcherSaga() {\r\n  yield takeLatest(GET_SUBMITTED_REQUESTS, getRequests);\r\n}\r\n\r\nexport default watcherSaga;\r\n","import { takeLatest, call, put, select } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport { COMPLETE_REQUEST } from '../actionTypes/api';\r\nimport { getBaseUrl, getToken, getSongRequests, getCompletedSongRequests } from \"./selectors\";\r\nimport {\r\n  setNotificationOpen,\r\n  setNotificationMessage,\r\n  setSongRequests,\r\n  setCompletedSongRequests,\r\n  setSelectedSong,\r\n} from \"../actions/index\";\r\n\r\nfunction* completeRequest(action) {\r\n  const { songObj } = action;\r\n  const baseUrl = yield select(getBaseUrl);\r\n  const token = yield select(getToken);\r\n  const songRequests = yield select(getSongRequests);\r\n  const completedRequests = yield select(getCompletedSongRequests);\r\n\r\n  const body = {\r\n    ...songObj,\r\n    State: \"completed\",\r\n    CompletedDateTime: new Date().toISOString(),\r\n  }\r\n\r\n  delete body.Position;\r\n\r\n  const { RequestID } = songObj;\r\n\r\n  try {\r\n    yield call(axios.post, `${baseUrl}/completed-request`, body, { headers: { \"X-Auth-Token\": token } });\r\n    yield put(setSongRequests(\r\n      songRequests.filter(obj => obj.RequestID !== RequestID).map(\r\n        (obj, i) => ({\r\n          ...obj,\r\n          Position: i + 1,\r\n        })\r\n      )\r\n    ));\r\n    yield put(setCompletedSongRequests([body, ...completedRequests]));\r\n\r\n    yield put(setSelectedSong(null));\r\n  } catch (error) {\r\n    yield put(setNotificationMessage(`Error completing request: ${error}`));\r\n    yield put(setNotificationOpen(true));\r\n  }\r\n}\r\n\r\nfunction* watcherSaga() {\r\n  yield takeLatest(COMPLETE_REQUEST, completeRequest);\r\n}\r\n\r\nexport default watcherSaga;\r\n","import { takeLatest, call, put, select } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport { CLEAR_REQUESTS } from '../actionTypes/api';\r\nimport { getBaseUrl, getToken } from \"./selectors\";\r\nimport {\r\n  setNotificationOpen,\r\n  setNotificationMessage,\r\n  setSongRequests,\r\n  setCompletedSongRequests,\r\n} from \"../actions/index\";\r\n\r\nfunction* clearRequests() {\r\n  const baseUrl = yield select(getBaseUrl);\r\n  const token = yield select(getToken);\r\n\r\n  const body = {\r\n    task: 'clearRequests'\r\n  }\r\n\r\n  try {\r\n    const response = yield call(axios.post, `${baseUrl}/admin-task`, body, { headers: { \"X-Auth-Token\": token } });\r\n    const { data } = response;\r\n    const { message } = data;\r\n    yield put(setNotificationMessage(`Success: ${message}`));\r\n    yield put(setNotificationOpen(true));\r\n    yield (put(setSongRequests([])));\r\n    yield (put(setCompletedSongRequests([])));\r\n  } catch (error) {\r\n    yield put(setNotificationMessage(`Error clearing requests: ${error}`));\r\n    yield put(setNotificationOpen(true));\r\n  }\r\n}\r\n\r\nfunction* watcherSaga() {\r\n  yield takeLatest(CLEAR_REQUESTS, clearRequests);\r\n}\r\n\r\nexport default watcherSaga;","import { takeLatest, call, put, select } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport { RELOAD_DATABASE } from '../actionTypes/api';\r\nimport { getBaseUrl, getToken } from \"./selectors\";\r\nimport {\r\n  setNotificationOpen,\r\n  setNotificationMessage,\r\n} from \"../actions/index\";\r\n\r\nfunction* reloadDatabase() {\r\n  const baseUrl = yield select(getBaseUrl);\r\n  const token = yield select(getToken);\r\n\r\n  const body = {\r\n    task: 'reloadDatabase'\r\n  }\r\n\r\n  try {\r\n    const response = yield call(axios.post, `${baseUrl}/admin-task`, body, { headers: { \"X-Auth-Token\": token } });\r\n    const { data } = response;\r\n    const { message } = data;\r\n    yield put(setNotificationMessage(`Success: ${message}`));\r\n    yield put(setNotificationOpen(true));\r\n\r\n  } catch (error) {\r\n    yield put(setNotificationMessage(`Error reloading database: ${error}`));\r\n    yield put(setNotificationOpen(true));\r\n  }\r\n}\r\n\r\nfunction* watcherSaga() {\r\n  yield takeLatest(RELOAD_DATABASE, reloadDatabase);\r\n}\r\n\r\nexport default watcherSaga;","import { takeLatest, call, put, select } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport { SUBMIT_SONG_ISSUE } from '../actionTypes/api';\r\nimport { getBaseUrl, getToken, getSelectedSong } from \"./selectors\";\r\nimport {\r\n  setNotificationOpen,\r\n  setNotificationMessage,\r\n  setSelectedSong,\r\n} from \"../actions/index\";\r\n\r\nfunction* submitSongIssue(action) {\r\n  const { issue } = action;\r\n  const baseUrl = yield select(getBaseUrl);\r\n  const token = yield select(getToken);\r\n  const songData = yield select(getSelectedSong);\r\n\r\n  yield put(setSelectedSong(null));\r\n\r\n  const body = {\r\n    task: \"recordFileIssue\",\r\n    issue,\r\n    songData,\r\n  }\r\n\r\n  try {\r\n    const response = yield call(axios.post, `${baseUrl}/admin-task`, body, { headers: { \"X-Auth-Token\": token } });\r\n    const { data } = response;\r\n    const { message } = data;\r\n    yield put(setNotificationMessage(`Success: ${message}`));\r\n    yield put(setNotificationOpen(true));\r\n  } catch (error) {\r\n    yield put(setNotificationMessage(`Error submitting issue: ${error}`));\r\n    yield put(setNotificationOpen(true));\r\n  }\r\n}\r\n\r\nfunction* watcherSaga() {\r\n  yield takeLatest(SUBMIT_SONG_ISSUE, submitSongIssue);\r\n}\r\n\r\nexport default watcherSaga;","import { spawn } from \"redux-saga/effects\";\r\n\r\nimport apiPollForRequestsSaga from \"./apiPollForRequests\";\r\nimport apiPollForSubmittedRequestsSaga from \"./apiPollForSubmittedRequests\";\r\n\r\nimport apiGetRequestsSaga from \"./apiGetRequests\";\r\nimport apiAuthenticationSaga from \"./apiAuthentication\";\r\nimport apiSubmitRequestSaga from \"./apiSubmitRequest\";\r\nimport apiSearchForSongsSaga from \"./apiSearchForSongs\";\r\nimport apiGetSubmittedRequests from './apiGetSubmittedRequests';\r\nimport apiCompleteRequestSaga from './apiCompleteRequest';\r\nimport apiClearRequestsSaga from './apiClearRequests';\r\nimport apiReloadDatabaseSaga from './apiReloadDatabase';\r\nimport apiSubmitSongIssueSaga from './apiSubmitSongIssue';\r\n\r\nexport default function* rootSaga() {\r\n  yield spawn(apiPollForRequestsSaga);\r\n  yield spawn(apiPollForSubmittedRequestsSaga);\r\n  yield spawn(apiGetRequestsSaga);\r\n  yield spawn(apiAuthenticationSaga);\r\n  yield spawn(apiSubmitRequestSaga);\r\n  yield spawn(apiSearchForSongsSaga);\r\n  yield spawn(apiGetSubmittedRequests);\r\n  yield spawn(apiCompleteRequestSaga);\r\n  yield spawn(apiClearRequestsSaga);\r\n  yield spawn(apiReloadDatabaseSaga);\r\n  yield spawn(apiSubmitSongIssueSaga);\r\n}\r\n","import { compose, createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers/index\";\r\nimport rootSaga from \"./sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewareCollection = [thunk, sagaMiddleware];\r\n\r\nconst enhancerCollection = [applyMiddleware(...middlewareCollection)];\r\n\r\nconst devTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (process.env.ENV !== \"prod\") {\r\n  // if this build is not in the production environment...\r\n\r\n  // implement redux chrome devtools\r\n  // https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd?hl\r\n  if (devTools) {\r\n    enhancerCollection.push(devTools);\r\n  }\r\n}\r\n\r\nconst store = createStore(rootReducer, compose(...enhancerCollection));\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './AppConnector';\nimport store from './store/index';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>, document.getElementById('root'));","export const SHOW_LOGON_DIALOG = \"SHOW_LOGON_DIALOG\";\r\nexport const SET_DJ_MODE_ACTIVE = \"SET_DJ_MODE_ACTIVE\";\r\nexport const SET_BASE_URL = \"SET_BASE_URL\";\r\nexport const SET_NOTIFICATION_OPEN = \"SET_NOTIFICATION_OPEN\";\r\nexport const SET_NOTIFICATION_MESSAGE = \"SET_NOTIFICATION_MESSAGE\";\r\nexport const HANDLE_LOGON_REQUEST = \"HANDLE_LOGON_REQUEST\";\r\nexport const HANDLE_LOGOFF_REQUEST = \"HANDLE_LOGOFF_REQUEST\";\r\nexport const SET_TOKEN = \"SET_TOKEN\";\r\n","export const CLEAR_SEARCH_RESULTS = \"CLEAR_SEARCH_RESULTS\";\r\nexport const SET_SEARCH_RESULTS = \"SET_SEARCH_RESULTS\";\r\nexport const CLEAR_SELECTED_SONG = \"CLEAR_SELECTED_SONG\";\r\nexport const SET_SELECTED_SONG = \"SET_SELECTED_SONG\";\r\nexport const SET_SONG_REQUESTS = \"SET_SONG_REQUESTS\";\r\nexport const SET_COMPLETED_SONG_REQUESTS = \"SET_COMPLETED_SONG_REQUESTS\";\r\nexport const SET_TICKER_STRING = \"SET_TICKER_STRING\";\r\nexport const SET_SUCCESSFUL_REQUEST_DETAILS = \"SET_SUCCESSFUL_REQUEST_DETAILS\";\r\n","module.exports = __webpack_public_path__ + \"static/media/logo-karaoke-png.3a41409a.png\";","// eslint-disable-next-line import/prefer-default-export\r\nexport const SET_WINDOW_HEIGHT_WIDTH = 'SET_WINDOW_HEIGHT_WIDTH';\r\nexport const SET_IS_LANDSCAPE = 'SET_IS_LANDSCAPE';\r\n","export const SET_SELECTED_BUTTON = 'SET_SELECTED_BUTTON';\r\nexport const SET_TOOLBAR_OPTIONS = 'SET_TOOLBAR_OPTIONS';","import * as actionTypes from \"../actionTypes/admin\";\r\n\r\nexport const showLogonDialog = bool => ({\r\n  type: actionTypes.SHOW_LOGON_DIALOG,\r\n  bool\r\n});\r\n\r\nexport const setDjModeActive = bool => ({\r\n  type: actionTypes.SET_DJ_MODE_ACTIVE,\r\n  bool\r\n});\r\n\r\nexport const setBaseUrl = url => ({\r\n  type: actionTypes.SET_BASE_URL,\r\n  url\r\n});\r\n\r\nexport const setNotificationMessage = string => ({\r\n  type: actionTypes.SET_NOTIFICATION_MESSAGE,\r\n  string\r\n});\r\n\r\nexport const setNotificationOpen = bool => ({\r\n  type: actionTypes.SET_NOTIFICATION_OPEN,\r\n  bool\r\n});\r\n\r\nexport const handleLogonRequest = credentials => ({\r\n  type: actionTypes.HANDLE_LOGON_REQUEST,\r\n  credentials\r\n});\r\n\r\nexport const handleLogoffRequest = () => ({\r\n  type: actionTypes.HANDLE_LOGOFF_REQUEST\r\n});\r\n\r\nexport const setToken = token => ({\r\n  type: actionTypes.SET_TOKEN,\r\n  token\r\n});\r\n","import * as actionTypes from \"../actionTypes/api\";\r\n\r\nexport const startPollForRequests = () => ({\r\n  type: actionTypes.START_POLL_FOR_REQUESTS\r\n});\r\n\r\nexport const stopPollForRequests = () => ({\r\n  type: actionTypes.STOP_POLL_FOR_REQUESTS\r\n});\r\n\r\nexport const getRequests = () => ({\r\n  type: actionTypes.GET_REQUESTS\r\n});\r\n\r\nexport const startPollForTicker = () => ({\r\n  type: actionTypes.START_POLL_FOR_TICKER\r\n});\r\n\r\nexport const stopPollForTicker = () => ({\r\n  type: actionTypes.STOP_POLL_FOR_TICKER\r\n});\r\n\r\nexport const getSubmittedRequests = () => ({\r\n  type: actionTypes.GET_SUBMITTED_REQUESTS\r\n});\r\n\r\nexport const submitRequest = (singer, history) => ({\r\n  type: actionTypes.SUBMIT_REQUEST,\r\n  singer,\r\n  history\r\n});\r\n\r\nexport const setSendingRequest = bool => ({\r\n  type: actionTypes.SET_SENDING_REQUEST,\r\n  bool\r\n});\r\n\r\nexport const searchForSongs = (string, searchBy, browse) => ({\r\n  type: actionTypes.SEARCH_FOR_SONGS,\r\n  string,\r\n  searchBy,\r\n  browse\r\n});\r\n\r\nexport const setGettingSearchResults = bool => ({\r\n  type: actionTypes.SET_GETTING_SEARCH_RESULTS,\r\n  bool\r\n});\r\n\r\nexport const setPollForRequestStatus = string => ({\r\n  type: actionTypes.SET_POLL_FOR_REQUEST_STATUS,\r\n  string,\r\n});\r\n\r\nexport const completeRequest = songObj => ({\r\n  type: actionTypes.COMPLETE_REQUEST,\r\n  songObj,\r\n});\r\n\r\nexport const clearRequests = () => ({\r\n  type: actionTypes.CLEAR_REQUESTS,\r\n});\r\n\r\nexport const reloadDatabase = () => ({\r\n  type: actionTypes.RELOAD_DATABASE,\r\n});\r\n\r\nexport const submitSongIssue = issue => ({\r\n  type: actionTypes.SUBMIT_SONG_ISSUE,\r\n  issue,\r\n});\r\n","import * as actionTypes from '../actionTypes/browseCache';\r\n\r\nexport const addToBrowseCache = (id, array, searchBy) => ({\r\n  type: actionTypes.ADD_TO_BROWSE_CACHE,\r\n  id,\r\n  array,\r\n  searchBy,\r\n});","import * as actionTypes from '../actionTypes/displayProperties';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const setWindowHeightWidth = (height, width) => ({\r\n  type: actionTypes.SET_WINDOW_HEIGHT_WIDTH,\r\n  height,\r\n  width,\r\n});\r\n\r\n\r\nexport const setIsLandscape = bool => ({\r\n  type: actionTypes.SET_IS_LANDSCAPE,\r\n  bool,\r\n});","import * as actionTypes from \"../actionTypes/results\";\r\n\r\nexport const clearSearchResults = () => ({\r\n  type: actionTypes.CLEAR_SEARCH_RESULTS\r\n});\r\n\r\nexport const setSearchResults = array => ({\r\n  type: actionTypes.SET_SEARCH_RESULTS,\r\n  array\r\n});\r\n\r\nexport const clearSelectedSong = () => ({\r\n  type: actionTypes.CLEAR_SELECTED_SONG\r\n});\r\n\r\nexport const setSelectedSong = obj => ({\r\n  type: actionTypes.SET_SELECTED_SONG,\r\n  obj\r\n});\r\n\r\nexport const setSongRequests = array => ({\r\n  type: actionTypes.SET_SONG_REQUESTS,\r\n  array\r\n});\r\n\r\nexport const setCompletedSongRequests = array => ({\r\n  type: actionTypes.SET_COMPLETED_SONG_REQUESTS,\r\n  array\r\n});\r\n\r\nexport const setTickerString = string => ({\r\n  type: actionTypes.SET_TICKER_STRING,\r\n  string\r\n});\r\n\r\nexport const setSuccessfulRequestDetails = obj => ({\r\n  type: actionTypes.SET_SUCCESSFUL_REQUEST_DETAILS,\r\n  obj\r\n});\r\n","import * as actionTypes from '../actionTypes/toolbar';\r\n\r\nexport const setSelectedButton = string => ({\r\n  type: actionTypes.SET_SELECTED_BUTTON,\r\n  string,\r\n});\r\n\r\nexport const setToolbarOptions = array => ({\r\n  type: actionTypes.SET_TOOLBAR_OPTIONS,\r\n  array,\r\n});","export {\r\n  showLogonDialog,\r\n  setDjModeActive,\r\n  setBaseUrl,\r\n  setNotificationMessage,\r\n  setNotificationOpen,\r\n  handleLogonRequest,\r\n  handleLogoffRequest,\r\n  setToken\r\n} from \"./admin\";\r\n\r\nexport {\r\n  startPollForRequests,\r\n  stopPollForRequests,\r\n  getRequests,\r\n  startPollForTicker,\r\n  stopPollForTicker,\r\n  getSubmittedRequests,\r\n  submitRequest,\r\n  setSendingRequest,\r\n  searchForSongs,\r\n  setGettingSearchResults,\r\n  setPollForRequestStatus,\r\n  completeRequest,\r\n  clearRequests,\r\n  reloadDatabase,\r\n  submitSongIssue,\r\n} from \"./api\";\r\n\r\nexport {\r\n  addToBrowseCache\r\n} from './browseCache';\r\n\r\nexport { setWindowHeightWidth, setIsLandscape } from \"./displayProperties\";\r\n\r\nexport {\r\n  clearSearchResults,\r\n  setSearchResults,\r\n  clearSelectedSong,\r\n  setSelectedSong,\r\n  setSongRequests,\r\n  setCompletedSongRequests,\r\n  setTickerString,\r\n  setSuccessfulRequestDetails\r\n} from \"./results\";\r\n\r\nexport { setSelectedButton, setToolbarOptions } from \"./toolbar\";\r\n","export const ADD_TO_BROWSE_CACHE = 'ADD_TO_BROWSE_CACHE';","export const SEARCH_PATH = \"/search\";\r\nexport const BROWSE_BY_ARTIST_PATH = \"/browseByArtist\";\r\nexport const BROWSE_BY_TITLE_PATH = \"/browseByTitle\";\r\nexport const RESULTS_PATH = \"/results\";\r\nexport const ADMIN_PATH = \"/admin\";\r\nexport const REQUESTS_PATH = \"/requests\";\r\nexport const SUCCESS_PATH = \"/success\";\r\n","export const TOOLBAR_HEIGHT = 65;\r\nexport const BUTTON_LABEL_INDEX = {\r\n  ADMIN: \"Admin\",\r\n  REQUESTS: \"Requests\",\r\n  SEARCH: \"Search\",\r\n  BROWSE_BY_ARTIST: \"Browse by Artist\",\r\n  BROWSE_BY_TITLE: \"Browse by Title\"\r\n};\r\nexport const SEARCH = \"SEARCH\";\r\nexport const BROWSE_BY_ARTIST = \"BROWSE_BY_ARTIST\";\r\nexport const BROWSE_BY_TITLE = \"BROWSE_BY_TITLE\";\r\nexport const ADMIN = \"ADMIN\";\r\nexport const REQUESTS = \"REQUESTS\";\r\n","export {\r\n  SEARCH_PATH,\r\n  BROWSE_BY_ARTIST_PATH,\r\n  BROWSE_BY_TITLE_PATH,\r\n  RESULTS_PATH,\r\n  ADMIN_PATH,\r\n  REQUESTS_PATH,\r\n  SUCCESS_PATH\r\n} from \"./routes\";\r\n\r\nexport { TITLE, ARTIST, BOTH } from \"./search\";\r\n\r\nexport {\r\n  TOOLBAR_HEIGHT,\r\n  ADMIN,\r\n  REQUESTS,\r\n  BUTTON_LABEL_INDEX,\r\n  SEARCH,\r\n  BROWSE_BY_ARTIST,\r\n  BROWSE_BY_TITLE\r\n} from \"./toolbar\";\r\n","export const ARTIST = \"Artist\";\r\nexport const TITLE = \"Title\";\r\nexport const BOTH = \"Both\";\r\n","import React from \"react\";\r\nimport { makeStyles, ListItem, Typography, IconButton } from \"@material-ui/core\";\r\nimport { CheckCircleOutline } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  listItem: {\r\n    width: \"100%\",\r\n    boxShadow:\r\n      \"0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)\",\r\n    backgroundColor: \"rgba(255,255,255,0.03)\",\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  requestContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"baseline\"\r\n  },\r\n  dataContainer: {\r\n    flexGrow: 1\r\n  },\r\n  dateTime: {\r\n    marginRight: theme.spacing(4),\r\n    color: theme.palette.action.disabled\r\n  },\r\n  songSummaryContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flexGrow: 1\r\n  },\r\n  row: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\"\r\n  },\r\n  halfRowContainer: {\r\n    width: \"50%\",\r\n    minWidth: \"50%\",\r\n    maxWidth: \"50%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"baseline\"\r\n  },\r\n  right: {\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  keyFormatting: {\r\n    width: \"55px\",\r\n    minWidth: \"55px\",\r\n    maxWidth: \"55px\",\r\n    color: theme.palette.action.disabled\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  }\r\n}));\r\n\r\nconst KaraokeSongSummaryListItem = props => {\r\n  const { songObj, setSelectedSong, completeRequest } = props;\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    Position,\r\n    Artist,\r\n    Title,\r\n    DiscRef,\r\n    Key,\r\n    Length,\r\n    Singer,\r\n    DateTime,\r\n    CompletedDateTime,\r\n  } = songObj;\r\n\r\n  const timeString = dtObj => {\r\n    return dtObj.toLocaleString().match(/[0-9]{1,2}:[0-9]{1,2}:[0-9]{1,2}/g);\r\n  };\r\n\r\n  return (\r\n    <ListItem\r\n      className={classes.listItem}\r\n      button\r\n      onClick={() => setSelectedSong(songObj)}\r\n    >\r\n      <div className={classes.paper}>\r\n        <div className={classes.dataContainer}>\r\n          {Singer ? (\r\n            <div id=\"request-container\" className={classes.requestContainer}>\r\n              {Position ? (\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  className={classes.dateTime}\r\n                >{`${Position}.`}</Typography>\r\n              ) : null}\r\n              <Typography variant=\"h5\" className={classes.dateTime}>\r\n                {timeString(CompletedDateTime || DateTime)}\r\n              </Typography>\r\n              <Typography variant=\"h5\">{Singer}</Typography>\r\n            </div>\r\n          ) : null}\r\n          <div\r\n            id=\"song-summary-container\"\r\n            className={classes.songSummaryContainer}\r\n          >\r\n            <div id=\"top-row\" className={classes.row}>\r\n              <div id=\"title-container\" className={classes.halfRowContainer}>\r\n                <Typography\r\n                  className={classes.keyFormatting}\r\n                  variant=\"subtitle2\"\r\n                  color=\"inherit\"\r\n                >\r\n                  Title:\r\n              </Typography>\r\n                <Typography variant=\"subtitle1\" noWrap>\r\n                  {Title}\r\n                </Typography>\r\n              </div>\r\n              <div id=\"artist-container\" className={classes.halfRowContainer}>\r\n                <Typography\r\n                  className={classes.keyFormatting}\r\n                  variant=\"subtitle2\"\r\n                  color=\"inherit\"\r\n                >\r\n                  Artist:\r\n              </Typography>\r\n                <Typography variant=\"subtitle1\" noWrap>\r\n                  {Artist}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div id=\"bottom-row\" className={classes.row}>\r\n              <div id=\"ref-container\" className={classes.halfRowContainer}>\r\n                <Typography\r\n                  className={classes.keyFormatting}\r\n                  variant=\"subtitle2\"\r\n                  color=\"inherit\"\r\n                >\r\n                  Ref:\r\n              </Typography>\r\n                <Typography variant=\"subtitle1\" noWrap>\r\n                  {DiscRef}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.halfRowContainer}>\r\n                <div id=\"key-container\" className={classes.halfRowContainer}>\r\n                  <Typography\r\n                    className={classes.keyFormatting}\r\n                    variant=\"subtitle2\"\r\n                    color=\"inherit\"\r\n                  >\r\n                    Key:\r\n                </Typography>\r\n                  <Typography variant=\"subtitle1\" noWrap>\r\n                    {Key}\r\n                  </Typography>\r\n                </div>\r\n                <div\r\n                  id=\"length-container\"\r\n                  className={[classes.halfRowContainer, classes.right].join(\" \")}\r\n                >\r\n                  <Typography\r\n                    className={classes.keyFormatting}\r\n                    variant=\"subtitle2\"\r\n                    color=\"inherit\"\r\n                  >\r\n                    Length:\r\n                </Typography>\r\n                  <Typography variant=\"subtitle1\" noWrap>\r\n                    {Length}\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={classes.buttonContainer}>\r\n          {Singer && !CompletedDateTime ? (\r\n            <IconButton\r\n              onClick={e => {\r\n                e.stopPropagation();\r\n                completeRequest(songObj)\r\n              }}>\r\n              <CheckCircleOutline fontSize=\"large\" />\r\n            </IconButton>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default KaraokeSongSummaryListItem;\r\n","import { connect } from 'react-redux';\r\nimport KaraokeSongSummaryListItem from './KaraokeSongSummaryListItem';\r\nimport { setSelectedSong, completeRequest } from '../../store/actions/index';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setSelectedSong: obj => dispatch(setSelectedSong(obj)),\r\n  completeRequest: obj => dispatch(completeRequest(obj)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(KaraokeSongSummaryListItem);","module.exports = __webpack_public_path__ + \"static/media/singers.7af10c51.png\";"],"sourceRoot":""}