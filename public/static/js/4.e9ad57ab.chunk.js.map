{"version":3,"sources":["containers/Requests/Requests.jsx","containers/Requests/RequestsConnector.js"],"names":["useStyles","makeStyles","theme","requests","minHeight","TOOLBAR_HEIGHT","spacing","headerContainer","position","top","width","paddingTop","paddingBottom","backgroundColor","palette","background","paper","zIndex","titleContainer","display","justifyContent","alignItems","hint","filterContainer","flexWrap","marginBottom","textField","maxWidth","marginRight","label","resultsListContainer","flexDirection","resultsList","flexGrow","requestTables","pending","empty","marginTop","withRouter","props","songRequests","completedSongRequests","setSelectedButton","startPollForRequests","stopPollForRequests","pollStatus","history","classes","React","useState","filter","setFilter","filterBy","setFilterBy","filteredSongRequests","setFilteredSongRequests","filteredCompletedSongRequests","setFilteredCompletedSongRequests","useEffect","REQUESTS","length","userInput","toLowerCase","obj","Artist","Title","matchSinger","Singer","includes","matchTitle","matchArtist","filterResults","handlers","useSwipeable","onSwipedLeft","push","SEARCH_PATH","onSwipedRight","ADMIN_PATH","preventDefaultTouchmoveEvent","trackMouse","className","id","TextField","value","onChange","e","target","variant","fullWidth","InputProps","endAdornment","InputAdornment","IconButton","disabled","onClick","Clear","ToggleButtonGroup","size","exclusive","event","handleFilterByOnChange","ToggleButton","key","Typography","List","map","RequestID","songObj","align","connect","state","results","api","dispatch","string","Requests"],"mappings":"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","file":"static/js/4.e9ad57ab.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  List\r\n} from \"@material-ui/core\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\r\nimport { Clear } from \"@material-ui/icons\";\r\nimport { REQUESTS, TOOLBAR_HEIGHT, ADMIN_PATH, SEARCH_PATH } from \"../../constants/index\";\r\n\r\nimport KaraokeSongSummaryListItem from \"../../components/KaraokeSongSummaryListItem/KaraokeSongSummaryListItemConnector\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  requests: {\r\n    minHeight: `calc(100vh - ${TOOLBAR_HEIGHT}px - ${theme.spacing(3)}px)`,\r\n  },\r\n  headerContainer: {\r\n    position: \"sticky\",\r\n    top: TOOLBAR_HEIGHT,\r\n    width: \"100%\",\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n    backgroundColor: theme.palette.background.paper,\r\n    zIndex: 100,\r\n  },\r\n  titleContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"baseline\"\r\n  },\r\n  hint: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  filterContainer: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  textField: {\r\n    maxWidth: \"50vw\",\r\n    marginRight: theme.spacing(3)\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  resultsListContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  resultsList: {\r\n    flexGrow: 1,\r\n    width: \"100%\"\r\n  },\r\n  requestTables: {\r\n    minHeight: \"50px\",\r\n    width: \"100%\"\r\n  },\r\n  pending: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-end'\r\n  },\r\n  empty: {\r\n    marginTop: theme.spacing(4),\r\n    marginBottom: theme.spacing(4),\r\n  }\r\n}));\r\n\r\nconst Requests = props => {\r\n  const { songRequests, completedSongRequests, setSelectedButton, startPollForRequests, stopPollForRequests, pollStatus, history } = props;\r\n  const classes = useStyles();\r\n\r\n  const [filter, setFilter] = React.useState(\"\");\r\n  const [filterBy, setFilterBy] = React.useState(0);\r\n  const [filteredSongRequests, setFilteredSongRequests] = React.useState(\r\n    songRequests\r\n  );\r\n  const [\r\n    filteredCompletedSongRequests,\r\n    setFilteredCompletedSongRequests\r\n  ] = React.useState(completedSongRequests);\r\n\r\n  React.useEffect(() => {\r\n    setSelectedButton(REQUESTS);\r\n    startPollForRequests();\r\n    return () => {\r\n      setSelectedButton(null);\r\n      stopPollForRequests();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    setFilteredSongRequests(songRequests);\r\n    setFilteredCompletedSongRequests(completedSongRequests);\r\n  }, [songRequests, completedSongRequests]);\r\n\r\n  const filterResults = () => {\r\n    const userInput = filter.toLowerCase();\r\n    setFilteredSongRequests(\r\n      songRequests.filter(obj => {\r\n        const { Artist, Title, Singer } = obj;\r\n        const matchSinger = Singer.toLowerCase().includes(userInput);\r\n        const matchTitle = Title.toLowerCase().includes(userInput);\r\n        const matchArtist = Artist.toLowerCase().includes(userInput);\r\n\r\n        if (\r\n          (filterBy === 0 && matchSinger) ||\r\n          (filterBy === 1 && matchTitle) ||\r\n          (filterBy === 2 && matchArtist)\r\n        ) {\r\n          return obj;\r\n        }\r\n\r\n        return null;\r\n      })\r\n    );\r\n\r\n    setFilteredCompletedSongRequests(\r\n      completedSongRequests.filter(obj => {\r\n        const { Artist, Title, Singer } = obj;\r\n        const matchSinger = Singer.toLowerCase().includes(userInput);\r\n        const matchTitle = Title.toLowerCase().includes(userInput);\r\n        const matchArtist = Artist.toLowerCase().includes(userInput);\r\n\r\n        if (\r\n          (filterBy === 0 && matchSinger) ||\r\n          (filterBy === 1 && matchTitle) ||\r\n          (filterBy === 2 && matchArtist)\r\n        ) {\r\n          return obj;\r\n        }\r\n\r\n        return null;\r\n      })\r\n    );\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (filter.length === 0) {\r\n      setFilteredSongRequests(songRequests);\r\n      setFilteredCompletedSongRequests(completedSongRequests);\r\n    } else if (filter.length >= 1) {\r\n      filterResults();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [filter, filterBy]);\r\n\r\n  const handleFilterByOnChange = value => {\r\n    if (value === null) {\r\n      return;\r\n    }\r\n\r\n    setFilterBy(value);\r\n  };\r\n\r\n  const handlers = useSwipeable({\r\n    onSwipedLeft: () => history.push(SEARCH_PATH),\r\n    onSwipedRight: () => history.push(ADMIN_PATH),\r\n    preventDefaultTouchmoveEvent: true,\r\n    trackMouse: true\r\n  });\r\n\r\n  return (\r\n    <div className={classes.requests} {...handlers}>\r\n      <div id=\"header-container\" className={classes.headerContainer}>\r\n        <div id=\"search=box\" className={classes.filterContainer}>\r\n          <TextField\r\n            id=\"filter-text-field\"\r\n            label=\"Filter results\"\r\n            value={filter}\r\n            onChange={e => setFilter(e.target.value)}\r\n            className={classes.textField}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton disabled={!filter} onClick={() => setFilter(\"\")}>\r\n                    <Clear />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n          <ToggleButtonGroup\r\n            size=\"large\"\r\n            value={filterBy}\r\n            exclusive\r\n            onChange={(event, value) => handleFilterByOnChange(value)}\r\n          >\r\n            <ToggleButton key=\"singer\" value={0}>\r\n              <Typography>Singer</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton key=\"title\" value={1}>\r\n              <Typography>Title</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton key=\"artist\" value={2}>\r\n              <Typography>Artist</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </div>\r\n      </div>\r\n      <div id=\"results-list-container\" className={classes.resultsListContainer}>\r\n        <div className={classes.pending}>\r\n          <Typography variant=\"h6\">Pending Requests</Typography>\r\n          <Typography variant=\"body1\">{pollStatus}</Typography>\r\n        </div>\r\n        <div id=\"pending-requests\" className={classes.requestTables}>\r\n          {songRequests.length > 0 ?\r\n            <List>\r\n              {filteredSongRequests.map(obj => (\r\n                <KaraokeSongSummaryListItem key={obj.RequestID} songObj={obj} />\r\n              ))}\r\n            </List> : <Typography className={classes.empty} align=\"center\">No requests available</Typography>}\r\n        </div>\r\n        <Typography variant=\"h6\">Completed Requests</Typography>\r\n        <div id=\"completed-requests\" className={classes.requestTables}>\r\n          {completedSongRequests.length > 0 ? <List>\r\n            {filteredCompletedSongRequests.map(obj => (\r\n              <KaraokeSongSummaryListItem key={obj.RequestID} songObj={obj} />\r\n            ))}\r\n          </List> : <Typography className={classes.empty} align=\"center\">No completed requests available</Typography>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Requests);\r\n","import { connect } from \"react-redux\";\r\nimport Requests from \"./Requests\";\r\nimport { setSelectedButton, startPollForRequests, stopPollForRequests } from \"../../store/actions/index\";\r\n\r\nconst mapStateTopProps = state => {\r\n  const { results, api } = state;\r\n  const { songRequests, completedSongRequests } = results;\r\n  const { pollStatus } = api;\r\n\r\n  return {\r\n    songRequests,\r\n    completedSongRequests,\r\n    pollStatus\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setSelectedButton: string => dispatch(setSelectedButton(string)),\r\n  startPollForRequests: () => dispatch(startPollForRequests()),\r\n  stopPollForRequests: () => dispatch(stopPollForRequests()),\r\n\r\n});\r\n\r\nexport default connect(\r\n  mapStateTopProps,\r\n  mapDispatchToProps\r\n)(Requests);\r\n"],"sourceRoot":""}